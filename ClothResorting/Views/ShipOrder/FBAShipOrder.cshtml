
@{
    ViewBag.Title = "FBAShipOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>FBA Sytem</h1>
<h2>Ship Order Page</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div id="div-create">
        <button id="btn-create" class="btn btn-primary">Created a new ship order</button>
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped" style="table-layout:fixed;word-wrap:break-word;">
            <thead>
                <tr>
                    <th style="width:39px">Id</th>
                    <th style="width:70px">Status</th>
                    <th>Ship Order #</th>
                    <th>Customer Code</th>
                    <th>Destination</th>
                    <th style="width:80px">ETS</th>
                    <th>Total Ctns</th>
                    <th>Total Plts</th>
                    <th style="width:60px">Total Amount</th>
                    <th style="width:60px">Invoice Status</th>
                    <th style="width:60px">Close Date</th>
                    <th style="width:60px">Closed By</th>
                    <th style="width:150px">Status Control</th>
                    <th>eFolder</th>
                    <th style="width:300px">Operation</th>
                    <th style="width:200px">Instruction</th>
                    <th style="width:80px">Create Date</th>
                    <th style="width:80px">Place Date</th>
                    <th style="width:80px">Ready Time</th>
                    <th style="width:80px">Released Date</th>
                    <th style="width:80px">Shipped Date</th>
                    <th style="width:200px">Log</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="iframe">
    <h2 id="h2-title"></h2>
    <div style="margin-top:20px;margin-left:30px;text-align:right;float:left">
        <text>Ship Order Number: </text><input id='input-shipordernumber' style='width:170px;margin-top:20px' class='input-sm' placeholder='Required' /><br />
        <text>Customer Code: </text><select id='select-customercode' class='select-vendor' style='width:170px;height:30px;margin-top:20px' required='required'>
            <option value='NULL'>Please select a code</option>
        </select><br />
        <text>Select Order Type: </text><select id='select-ordertype' style='width:170px;height:30px;margin-top:20px' required='required'>
            <option value='Standard'>Standard</option>
            <option value='Ecommerce'>Ecommerce</option>
        </select><br />
        <text>Destination: </text><input id='input-destination' style='width:170px;margin-top:20px' class='input-sm' placeholder='optional' /><br />
        <text>Pick Reference: </text><input id='input-reference' style='width:170px;margin-top:20px' class='input-sm' placeholder='optional' /><br />
        <text>Carrier: </text><input id='input-carrier' style='width:170px;margin-top:20px' class='input-sm' placeholder='optional' /><br />
    </div>
    <div style="margin-top:20px;margin-right:20px;text-align:right;float:right">
        <text>BOL #: </text><input id='input-bol' style='width:170px;margin-top:20px' class='input-sm' placeholder='Optional' /><br />
        <text>Pick #: </text><input id='input-pick' style='width:170px;margin-top:20px' class='input-sm' placeholder='Optional' /><br />
        <text>PO #: </text><input id='input-po' style='width:170px;margin-top:20px' class='input-sm' placeholder='Optional' /><br />
        <text>ETS(Required): </text><input id='input-ets' type="date" style='width:170px;margin-top:20px' class='input-sm' /><br />
        <text>ETS Time Range: </text><input id='input-range' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /><br />
        <text>Instruction: </text><input id='input-instruction' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /><br />
        <button id="btn-update" class='btn btn-primary' style="margin-top:20px">Update</button>
        <button id="btn-add" class='btn btn-primary' style="margin-top:20px">Create</button>
    </div>
</div>
<div class="iframe-date">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Select Operation Date: </text><input type="datetime-local" id='input-shipdate' style='width:200px' class='input-sm' /><br />
        <button id="btn-ready" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Confirm Ready</button>
        <button id="btn-ship" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Confirm Ship</button>
    </div>
</div>
<div class="iframe-detail">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Description: </text><input id='input-detail-description' style='width:400px' class='input-sm' /><br />
        <button id="btn-detail-add" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">create</button>
    </div>
</div>
@Html.Partial("~/Views/shiporder/_FBAShipOrderPartial.cshtml", null)

@section scripts
{
    <script>
        $(document).ready(function () {

            var index;
            var table;
            var url;
            var status;
            var shipOrder;
            var shipOrderId;
            var customerCode;
            var reference;
            var customerId = getUrlParameter('customerId');
            var invoiceStatus;
            var searchBar = getUrlParameter('search');

            $(".iframe, #btn-update, #btn-ready, #btn-ship").hide();
            $(".iframe-date").hide();
            $(".iframe-wo, .iframe-wo-readonly, .iframe-wo-warehouse,.iframe-detail").hide();

            //动态获取Customer数据
            $.ajax({
                type: "GET",
                url: "/api/uppervendor/?departmentCode=FBA",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $("#select-customercode").append("<option value='" + data[i] + "'>" + data[i] + "</option>");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            if (customerId != undefined)
            {
                //获取订单列表
                url = "/api/fba/fbashiporder/?customerId=" + customerId;
            }
            else
            {
                url = "/api/fba/fbashiporder/";
            }

            var columnArray = [
                {
                    data: "id",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "status",
                    render: function (data) {
                        status = data;
                        if (data == "New Created")
                            return "<font color='gray'>" + data + "</font>"
                        else if (data == "Picking")
                            return "<font color='vermilion'>" + data + "</font>";
                        if (data == "New Order")
                            return "<font color='orange'>" + data + "</font>"
                        else if (data == "Processing")
                            return "<font color='red'>" + data + "</font>";
                        else if (data == "Ready")
                            return "<font color='green'>" + data + "</font>";
                        else if (data == "Released")
                            return "<font color='brown'>" + data + "</font>";
                        else if (data == "Shipped")
                            return "<font color='blue'>" + data + "</font>";
                        else
                            return "<font>" + data + "</font>";
                    }
                },
                {
                    data: "shipOrderNumber",
                    render: function (data) {
                        shipOrder = data;
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "customerCode",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "destination",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "etsTimeRange",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "totalCtns",
                    render: function (data) {
                        return "<font color='green'>" + data + "</font>";
                    }
                },
                {
                    data: "totalPlts",
                    render: function (data) {
                        return "<font color='blue'>" + data + "</font>";
                    }
                },
                {
                    data: "totalAmount",
                    render: function (data) {
                        return "<font color='gold' style='background-color:black'>$" + data + "</font>";
                    }
                },
                {
                    data: "invoiceStatus",
                    render: function (data) {
                        invoiceStatus = data;
                        return "<text class='text-status'>" + data + "</text>";
                    }
                },
                {
                    data: "closeDate",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'>Open</font>"
                        else
                            return "<font>" + data.substring(0, 10) + "</font>";
                    }
                },
                {
                    data: "confirmedBy",
                    render: function (data) {
                        if (data == null)
                            return "";
                        else
                            return "<font>" + data + "</font>";
                    }
                },
                {
                    data: "id",
                    render: function (data) {
                        if (status == "New Created")
                            return "<input type='button' class='btn btn-link btn-changestatus' iid='" + data + "' value='Release' />";
                        else if (status == "Picking")
                            return "<input type='button' class='btn btn-link btn-revert' iid='" + data + "' value='Revert' /><input type='button' class='btn btn-link btn-release' iid='" + data + "' value='Release' /><input type='button' class='btn btn-link btn-wo' iid='" + data + "' value='Push' />";
                        else if (status == "New Order")
                            return "<input type='button' class='btn btn-link btn-revert' iid='" + data + "' value='Recall' />";
                        else if (status == "Processing")
                            return "";
                        else if (status == "Ready")
                            return "<input type='button' class='btn btn-link btn-revert' iid='" + data + "' value='Unready' />";
                        else if (status == "Released")
                            return "<input type='button' class='btn btn-link btn-revert' iid='" + data + "' value='Unrelease' /><input type='button' class='btn btn-link btn-ship' iid='" + data + "' value='Ship' />";
                        else if (status == "Shipped")
                            return "";
                        else
                            return "";
                    }
                },
                {
                    data: "shipOrderNumber",
                    render: function (data) {
                        return "<button class='btn btn-link btn-file' reference='" + data + "'>Files</button>";
                    }
                },
                {
                    data: "id",
                    render: function (data) {
                        if (status == "New Created")
                            return "<button reference='" + shipOrder + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatus + "'class='btn btn-link btn-fee'>Fee</button><input type='button' class='btn btn-link btn-edit' iid='" + data + "' value='Edit' /><input type='button' class='btn btn-link btn-pick' iid='" + data + "' value='Pick' /><input type='button' class='btn btn-link btn-delete' iid='" + data + "' value='X' />";
                        else if (status == "Picking")
                            return "<button reference='" + shipOrder + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatus + "'class='btn btn-link btn-fee'>Fee</button><input type='button' class='btn btn-link btn-edit' iid='" + data + "' value='Edit' /><input type='button' class='btn btn-link btn-pick' iid='" + data + "' value='Pick' /><input type='button' class='btn btn-link btn-bol' iid='" + data + "' value='BOL' /><input type='button' class='btn btn-link btn-delete' iid='" + data + "' value='X' />";
                        else if (status == "New Order")
                            return "<button reference='" + shipOrder + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatus + "'class='btn btn-link btn-fee'>Fee</button><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' /><input type='button' class='btn btn-link btn-partialedit' iid='" + data + "' value='Edit' /><input type='button' class='btn btn-link btn-view' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-bol' iid='" + data + "' value='BOL' />";
                        else if (status == "Processing")
                            return "<button reference='" + shipOrder + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatus + "'class='btn btn-link btn-fee'>Fee</button><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' /><input type='button' class='btn btn-link btn-partialedit' iid='" + data + "' value='Edit' /><input type='button' class='btn btn-link btn-view' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-bol' iid='" + data + "' value='BOL' />";
                        else if (status == "Ready")
                            return "<button reference='" + shipOrder + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatus + "'class='btn btn-link btn-fee'>Fee</button><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' /><input type='button' class='btn btn-link btn-partialedit' iid='" + data + "' value='Edit' /><input type='button' class='btn btn-link btn-view' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-bol' iid='" + data + "' value='BOL' />";
                        else if (status == "Released")
                            return "<button reference='" + shipOrder + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatus + "'class='btn btn-link btn-fee'>Fee</button><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' /><input type='button' class='btn btn-link btn-view' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-bol' iid='" + data + "' value='BOL' />";
                        else if (status == "Shipped")
                            return "<button reference='" + shipOrder + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatus + "'class='btn btn-link btn-fee'>Fee</button><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' /><input type='button' class='btn btn-link btn-view' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-bol' iid='" + data + "' value='BOL' />";
                        else
                            return "";
                    }
                },
                {
                    data: "instruction",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "createDate",
                    render: function (data) {
                        return "<font>" + data.substring(0, 10) + "</font>";
                    }
                },
                {
                    data: "placeTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>";
                        else
                            return "<font>" + data.substring(0, 10) + " " + data.substring(11, 16) + "</font>";
                    }
                },
                {
                    data: "readyTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>";
                        else
                            return "<font>" + data.substring(0, 10) + " " + data.substring(11, 16) + "</font>";
                    }
                },
                {
                    data: "releasedDate",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>";
                        else
                            return "<font>" + data.substring(0, 10) + " " + data.substring(11, 16) + "</font>";
                    }
                },
                {
                    data: "shipDate",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>"
                        else
                            return "<font>" + data.substring(0, 10) + " " + data.substring(11, 16) + "</font>";
                    }
                },
                {
                    data: "operationLog",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                }
            ]
            GetAjaxTable("GET", url, "#table", table, columnArray);

            //点击Pick按钮，转到该运单的拣货页面
            $("#table").on("click", ".btn-pick", function () {
                shipOrderId = $(this).parent().parent("tr").children('td').eq(0).children('text').html();
                //var orderType = $(this).parent().parent("tr").children('td').eq(3).children('text').html();
                //var container = $(this).parent().parent("tr").children('td').eq(5).children('font').html();

                $(window.location).attr('href', "/shiporder/fbapickdetail/?shipOrderId=" + shipOrderId);
            });

            $("#table").on("click", ".btn-view", function () {
                var shipOrderId = $(this).parent().parent("tr").children('td').eq(0).children('text').html();
                //var orderType = $(this).parent().parent("tr").children('td').eq(3).children('text').html();
                //var container = $(this).parent().parent("tr").children('td').eq(5).children('font').html();

                $(window.location).attr('href', "/shiporder/viewfbapickdetail/?shipOrderId=" + shipOrderId);
            });

            //点击创建新运单按钮，打开新建运单弹窗
            $("#btn-create").click(function () {
                $("#btn-add").show();
                $("#btn-update").hide();
                $("#h2-title").html("Create new ship order");

                //取消禁用
                $("#input-shipordernumber").removeAttr("disabled");

                //重制表单
                $(".input-sm").val("");
                $("#select-customercode option:first").prop("selected", 'selected');
                $("#select-ordertype option:first").prop("selected", 'selected');

                Openiframe(index, ".iframe", "700px", "500px");
            })

            //点击添加按钮，新建一个新的运单
            $("#btn-add").on("click", function () {
                var shipOrderNumber = $("#input-shipordernumber").val();
                var customerCode = $("#select-customercode option:selected").val();
                var orderType = $("#select-ordertype option:selected").val();
                var destination = $("#input-destination").val();
                var pickReference = $("#input-reference").val();
                var bol = $("#input-bol").val();
                var carrier = $("#input-carrier").val();
                var ets = $("#input-ets").val();
                var timeRange = $("#input-range").val();
                var pickNumber = $("#input-pick").val();
                var purchaseOrderNumber = $("#input-po").val();
                var instruction = $("#input-instruction").val();

                if (shipOrderNumber == "" || ets == "" || customerCode == "NULL") {
                    alert("Ship Order #, ETS and Customer Code are required.");
                }

                else {
                    var obj = {
                        "shipOrderNumber": shipOrderNumber.toString(),
                        "customerCode": customerCode.toString(),
                        "destination": destination.toString(),
                        "pickReference": pickReference.toString(),
                        "orderType": orderType.toString(),
                        "bolNumber": bol.toString(),
                        "carrier": carrier.toString(),
                        "ets": ets.toString(),
                        "timeRange": timeRange.toString(),
                        "pickNumber": pickNumber.toString(),
                        "purchaseOrderNumber": purchaseOrderNumber.toString(),
                        "instruction": instruction.toString()
                    }
                    $.ajax({
                        type: "POST",
                        url: "/api/fba/fbashiporder/",
                        data: JSON.stringify(obj),
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function () {
                            alert("Success!");
                            window.location.reload();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            index = layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                layer.close(index);
                            });
                        }
                    });
                }
            });

            //点击费用按钮，进入收费项目登记页面
            $("#table").on("click", ".btn-fee", function () {

                shipOrderId = shipOrderId = $(this).parent().parent("tr").children('td').eq(0).children('text').html();
                var tpStatus = $(this).parent().parent("tr").children('td').eq(9).children('text').html();

                //if ($(this).attr('invoicestatus') == "Closed")
                if (tpStatus == "Closed")
                    $(window.location).attr('href', '/fba/FBAinvoiceDetailReadOnly/?reference=' + $(this).attr('reference') + "&invoiceType=ShipOrder" + "&invoiceStatus=" + $(this).attr('invoicestatus') + "&shipOrderId=" + shipOrderId);
                else
                    $(window.location).attr('href', '/fba/FBAinvoiceDetail/?reference=' + $(this).attr('reference') + "&invoiceType=ShipOrder" + "&invoiceStatus=" + $(this).attr('invoicestatus') + "&shipOrderId=" + shipOrderId);

            });

            //点击BOL按钮，下载有内容的BOL
            $("#table").on("click", ".btn-bol", function () {
                var shipOrderId = $(this).attr('iid');
                url = "/api/fba/fbashipOrder/?shipOrderId=" + shipOrderId + "&operation=BOL";
                SendUploadAjaxMethodAndDownloadFile("GET", url, {});
            });

            //点击逆向按钮，将运单往逆向流程转换状态
            $("#table").on("click", ".btn-revert", function () {
                var id = $(this).attr('iid');
                var date = new Date();
                var today = date.getFullYear().toString() + "-" + (date.getMonth() + 1).toString() + "-" + date.getDate().toString();

                url = "/api/fba/fbashiporder/?shipOrderId=" + id + "&operationDate=" + today + "&operation=ReverseStatus";
                SendAjaxMethod("PUT", url, {});
            })

            //点击changestatus按钮，将运单正向改变状态
            $("#table").on("click", ".btn-changestatus", function () {
                var id = $(this).attr('iid');
                var date = new Date();
                var today = date.getFullYear().toString() + "-" + (date.getMonth() + 1).toString() + "-" + date.getDate().toString();

                url = "/api/fba/fbashiporder/?shipOrderId=" + id + "&operationDate=" + today + "&operation=ChangeStatus";
                SendAjaxMethod("PUT", url, {});
            })

            //点击picking状态下的Release按钮，将运单标记为released
            $("#table").on("click", ".btn-release", function () {
                var id = $(this).attr('iid');
                url = "/api/fba/fbashiporder/?shipOrderId=" + id + "&operation=SkipToRelease";
                SendAjaxMethod("PUT", url, {});
            })

            //点击Ship按钮，将运单标记为shipped
            $("#table").on("click", ".btn-ship", function () {
                var button = $(this);
                shipOrderId = button.attr('iid');
                $("#btn-ship").show();
                $("btn-ready").hide();

                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["400px", "150px"],
                    content: $(".iframe-date")
                });
            });

            //填好ship日期后，点击确认发货按钮
            $("#btn-ship").on("click", function () {

                layer.close(index);
                var shipDate = $("#input-shipdate").val();

                if (shipDate != "") {
                    bootbox.confirm("Are you want to ship this order? This operation is unreversed.", function (result) {
                        if (result) {
                            url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&operationDate=" + shipDate + "&operation=ChangeStatus";
                            SendAjaxMethod("PUT", url, {});
                        }
                    });
                }
                else {
                    alert("Ship Date must be complete.");
                }
            });

            //Remove Ship Order
            $("#table").on("click", ".btn-delete", function () {
                var id = $(this).attr('iid');

                url = "/api/fba/fbashiporder/?shipOrderId=" + id; 
                SendAjaxMethod("DELETE", url, {});
            });

            //点击文件按钮，打开订单相关文件管理页面
            $("#table").on("click", ".btn-file", function () {
                $(window.location).attr('href', "/EFolder/FBAEfolder/?reference=" + $(this).attr('reference') + "&orderType=ShipOrder");
            });

            //临时机关，点击invoice Status可以将状态临时改成Await开放状态
            $("#table").on("click", ".text-status", function () {
                $(this).html("Await");
            });

            //点击任何按钮，都将searchBar中的内容保存到url中但不刷新页面
            $("#table").on("click", ".btn", function () {
                tableSearch = $("#table_filter").children('label').children('input').val();
                if (customerId != undefined)
                {
                    window.history.pushState({}, {}, "/ShipOrder/FBAShipOrder/?customerId=" + customerId + "&search=" + tableSearch);
                }
                else
                {
                    window.history.pushState({}, {}, "/ShipOrder/FBAShipOrder/?search=" + tableSearch);
                }
            });

            //点击编辑按钮，打开订单编辑页面
            $("#table").on("click", ".btn-edit, .btn-partialedit", function () {
                shipOrderId = $(this).attr('iid');

                //取消禁用
                $("#input-shipordernumber").removeAttr("disabled");

                url = "/api/fba/fbashipOrder/?shipOrderId=" + shipOrderId + "&operation=Update";

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {

                        layer.close(index);

                        $("#btn-add").hide();
                        $("#btn-update").show();

                        $("#input-shipordernumber").val(data.shipOrderNumber);
                        $("#select-customercode").val(data.customerCode);
                        $("#select-ordertype").val(data.orderType);
                        $("#input-destination").val(data.destination);
                        $("#input-reference").val(data.pickReference);
                        $("#input-bol").val(data.bolNumber);
                        $("#input-carrier").val(data.carrier);
                        $("#input-ets").val(data.ets.toString().substring(0, 10));
                        $("#input-range").val(data.etsTimeRange);
                        $("#input-pick").val(data.pickNumber);
                        $("#input-po").val(data.purchaseOrderNumber);
                        $("#input-instruction").val(data.instruction);

                        $("#h2-title").html("Update ship order");
                        Openiframe(index, ".iframe", "700px", "500px");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //对于部分编辑edit的权限，点击edit，锁死shiporderNumber对的输入
            $("#table").on("click", ".btn-partialedit", function () {
                $("#input-shipordernumber").attr("disabled", "disabled");
            });

            //点击更新按钮，更新ship order的信息
            $("#btn-update").on("click", function () {
                var shipOrderNumber = $("#input-shipordernumber").val();
                var customerCode = $("#select-customercode option:selected").val();
                var orderType = $("#select-ordertype option:selected").val();
                var destination = $("#input-destination").val();
                var pickReference = $("#input-reference").val();
                var bol = $("#input-bol").val();
                var carrier = $("#input-carrier").val();
                var ets = $("#input-ets").val();
                var timeRange = $("#input-range").val();
                var pickNumber = $("#input-pick").val();
                var purchaseOrderNumber = $("#input-po").val();
                var instruction = $("#input-instruction").val();

                if (shipOrderNumber == "" || ets == "" || customerCode == "NULL") {
                    alert("Ship Order #, ETS and Customer Code are required.");
                }

                else {
                    var obj = {
                        "shipOrderNumber": shipOrderNumber.toString(),
                        "customerCode": customerCode.toString(),
                        "destination": destination.toString(),
                        "pickReference": pickReference.toString(),
                        "orderType": orderType.toString(),
                        "bolNumber": bol.toString(),
                        "carrier": carrier.toString(),
                        "ets": ets.toString(),
                        "timeRange": timeRange.toString(),
                        "pickNumber": pickNumber.toString(),
                        "purchaseOrderNumber": purchaseOrderNumber.toString(),
                        "instruction": instruction.toString()
                    }
                    $.ajax({
                        type: "PUT",
                        url: "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId,
                        data: JSON.stringify(obj),
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function () {
                            alert("Success!");
                            window.location.reload();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            index = layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                layer.close(index);
                            });
                        }
                    });
                }
            });

            //点击Push按钮，打开编辑Work Order弹窗
            $("#table").on("click", ".btn-wo", function () {
                customerCode = $(this).parent().parent("tr").children("td").eq(3).children("text").html();
                shipOrderId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                reference = $(this).parent().parent("tr").children("td").eq(2).children("text").html();

                GetWorkOrder(shipOrderId, customerCode, reference, ".iframe-wo");
            });

            //点击WO按钮，打开只读的Work Order弹窗
            $("#table").on("click", ".btn-wo-readonly", function () {
                customerCode = $(this).parent().parent("tr").children("td").eq(3).children("text").html();
                shipOrderId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                reference = $(this).parent().parent("tr").children("td").eq(2).children("text").html();
                GetWorkOrder(shipOrderId, customerCode, reference, ".iframe-wo-readonly");
            });

            //点击添加指示按钮按钮，打开一个简易填写界面
            $("#btn-detail-create").on("click", function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });
            });

            //点击添加按钮，添加操作指示
            $("#btn-detail-add").on("click", function () {
                var description = $("#input-detail-description").val();

                if (description != "") {
                    layer.close(index);
                    url = "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=ShipOrder&description=" + encodeURIComponent(description);
                    $.ajax({
                        type: "POST",
                        url: url,
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        beforeSend: function () {
                            layer.close(index);
                            index = layer.msg('Processing...', {
                                icon: 3,
                                shade: 0.01,
                                time: 99 * 1000
                            });
                        },
                        success: function (data) {
                            var osColumnArray = [
                                {
                                    data: "id",
                                    width: "10%",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "description",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "placeTime",
                                    render: function (data) {
                                        return "<text>" + data.substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "placeBy",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<button iid='" + data + "' class='btn btn-link btn-detail-delete'>Delete</button>";
                                    }
                                }
                            ];
                            url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&operation=WO"
                            $.ajax({
                                type: "GET",
                                url: url,
                                contentType: 'application/json; charset=utf-8',
                                dataType: "json",
                                beforeSend: function () {
                                    layer.close(index);
                                    index = layer.msg('Processing...', {
                                        icon: 1,
                                        shade: 0.01,
                                        time: 99 * 1000
                                    });
                                },
                                success: function (data) {
                                    layer.close(index);
                                    if (table) {
                                        table.destroy();
                                    }

                                    table = $(".table-wo").DataTable({
                                        data: data.operationInstructions,
                                        destroy: true,
                                        scrollX: true,
                                        order: [[0, "desc"]],
                                        scrollCollapse: true,
                                        scrollY: "600px",
                                        iDisplayLength: 100,
                                        columns: osColumnArray
                                    });
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                        window.location.reload();
                                    });
                                }
                            });
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                window.location.reload();
                            });
                        }
                    });
                }
            });

            //点击操作指示表中的删除按钮，删除选中的操作指示
            $(".table-wo").on("click", ".btn-detail-delete", function () {
                var id = $(this).attr('iid');

                url = "/api/fba/fbainvoicedetail/?chargingItemDetailId=" + id;

                $.ajax({
                    type: "DELETE",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        var osColumnArray = [
                            {
                                data: "id",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "description",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "placeTime",
                                render: function (data) {
                                    return "<text>" + data.substring(0, 10) + "</text>";
                                }
                            },
                            {
                                data: "placeBy",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    return "<button iid='" + data + "' class='btn btn-link btn-detail-delete'>Delete</button>";
                                }
                            }
                        ];
                        url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&operation=WO"
                        $.ajax({
                            type: "GET",
                            url: url,
                            contentType: 'application/json; charset=utf-8',
                            dataType: "json",
                            beforeSend: function () {
                                layer.close(index);
                                index = layer.msg('Processing...', {
                                    icon: 1,
                                    shade: 0.01,
                                    time: 99 * 1000
                                });
                            },
                            success: function (data) {
                                layer.close(index);
                                if (table) {
                                    table.destroy();
                                }

                                table = $(".table-wo").DataTable({
                                    data: data.operationInstructions,
                                    destroy: true,
                                    scrollX: true,
                                    order: [[0, "desc"]],
                                    scrollCollapse: true,
                                    scrollY: "600px",
                                    iDisplayLength: 100,
                                    columns: osColumnArray
                                });
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                    window.location.reload();
                                });
                            }
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击WO中的Push按钮，将订单推送到仓库端
            $(".btn-push").on("click", function () {
                var date = new Date();
                var today = date.getFullYear().toString() + "-" + (date.getMonth() + 1).toString() + "-" + date.getDate().toString();

                url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&operationDate=" + today + "&operation=ChangeStatus";
                SendAjaxMethod("PUT", url, {});
            });

            function GetAjaxTable(methodType, url, tableId, table, columsArray) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        if (table) {
                            table.destroy();
                        }

                        table = $(tableId).DataTable({
                            data: data,
                            destroy: true,
                            scrollX: true,
                            order: [[0, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: columsArray
                        });

                        var tableSearch = $("#table_filter").children('label').children('input');

                        if (searchBar != undefined) {
                            tableSearch.val(searchBar);
                            table.search(searchBar).draw();
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function SendAjaxMethod(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(obj),
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success!", function () {
                            window.location.reload();
                        })
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function ReturnDownableMenu(id)
            {
                return "<div class='downablemenu'><ul><li>Operation Menu<ul><li><input type='button' class='btn btn-link btn-pick' iid='" + id + "' value='Pick' /></li><li><input type='button' class='btn btn-link btn-download' iid='" + id + "' value='Download BOL' /></li></ul></li></ul></div>"
            }

            function Openiframe(index, elementId, width, height) {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: [width, height],
                    content: $(elementId)
                });
            };

            function SendUploadAjaxMethodAndDownloadFile(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: false,
                    cache: false,
                    processData: false,
                    data: obj,
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success! The BOL will be downloaded automatically.");
                        $(window.location).attr('href', '/api/fba/downloadfile/?fullPath=' + encodeURIComponent(data));
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            //解析url中的参数函数
            function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };

            function GetWorkOrder(shipOrderId, customerCode, reference, pageId) {
                $(".h2-customercode").html("Customer Code: " + customerCode);
                grandChannel.openiframe(index, pageId, "1000px", "800px");
                url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&operation=WO";

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $(".text-place").html(data.placeTime);
                        $(".text-ready").html(data.readyTime);
                        $(".text-ets").html(data.ets);
                        $(".text-pm").html(data.pickMan);
                        $(".text-instructor").html(data.instructor);
                        $(".text-so").html(data.shipOrderNumber);
                        $(".text-reference").html(data.reference);
                        $(".text-destination").html(data.destination);
                        $(".text-carrier").html(data.carrier);
                        $(".text-lot").html(data.lot);
                        $(".text-ctns").html(data.pickableCtns);
                        $(".text-plts").html(data.pickablePlts);
                        $(".text-inventory").html(data.pltsFromInventory);
                        $(".text-new").html(data.newPlts);
                        $(".text-total").html(data.outboundPlts);

                        var plColumnArray = [
                            {
                                data: "order",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "container",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "sku",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "pickableCtns",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "pickablePlts",
                                render: function (data) {
                                    if (data != 0)
                                        return "<text>" + data + "</text>";
                                    else
                                        return "";
                                }
                            },
                            {
                                data: "location",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            }
                        ];
                        $(".table-pickinglist").DataTable({
                            data: data.pickingLists,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "asc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: plColumnArray
                        });
                        var osColumnArray;
                        if (pageId == ".iframe-wo") {
                            osColumnArray = [
                                {
                                    data: "id",
                                    width: "10%",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "description",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "placeTime",
                                    render: function (data) {
                                        return "<text>" + data.substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "placeBy",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<button iid='" + data + "' class='btn btn-link btn-detail-delete'>Delete</button>";
                                    }
                                }
                            ];
                        }
                        else {
                            osColumnArray = [
                                {
                                    data: "id",
                                    width: "10%",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "description",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "placeTime",
                                    render: function (data) {
                                        return "<text>" + data.substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "placeBy",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        return " ";
                                    }
                                }
                            ];
                        }

                        table = $(".table-wo").DataTable({
                            data: data.operationInstructions,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: osColumnArray
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            }

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });
    </script>
}
