
@{
    ViewBag.Title = "FBAPickDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>FBA System</h1>
<h2>Pick Detail Page</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div id="div-create">
        <input operation="UploadBOL" type="button" class="btn btn-group btn-create1" value="Upload BOL Templist" />
        <input operation="UploadShipOrder" type="button" class="btn btn-group btn-create1" value="Upload Ship Order Templist" />
        <input operation="Download" type="button" class="btn btn-group btn-download" value="Download Picking List" />
        <input id="btn-diag" type="button" class="btn btn-danger" value="Diagnostic system" />
        <button style="background-color:indianred;color:white" class="btn btn-group btn-template">Download Template</button>
        <input type="button" class="btn btn-info btn-updatepickinfo" value="Update picking info" />
        <input id="btn-inventory" type="button" class="btn btn-primary" value="Pick from inventory" />
    </div>
    <div id="div-partial">
        @Html.Partial("~/Views/shiporder/_FBAInventoryListPartial.cshtml", null)
    </div>
    <div>
        <input style="width:140px" id="input-container" class="input-sm" placeholder="Container" />
        <input style="width:140px" id="input-customer" class="input-sm" placeholder="CustomerCode" />
        <input style="width:140px" id="input-shipmentid" class="input-sm" placeholder="Shipment Id/SKU" />
        <input style="width:140px" id="input-amzref" class="input-sm" placeholder="Amz Ref Id" />
        @*<input style="width:140px" id="input-deliver" class="input-sm" placeholder="How to deliver" />*@
        <input style="width:140px" id="input-warehouse" class="input-sm" placeholder="Warehouse Code" />
        <button ordertype="Standard" class="btn btn-info btn-pick">Pick Pallets</button>
        <button ordertype="ecommerce" class="btn btn-info btn-pick">Pick Cartons</button>
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Status</th>
                    <th>Grand #</th>
                    <th>Container #</th>
                    <th>Type</th>
                    <th style="width:206px">FBA shmt ID./SKU</th>
                    <th style="width:64px">Amz Ref ID.</th>
                    <th>Size</th>
                    <th>Delivery</th>
                    <th>Warehouse Code</th>
                    <th>Gross Weight</th>
                    <th>CBM</th>
                    <th>Ctns/Plt</th>
                    <th>Ttl Pick Ctns</th>
                    <th>Inventory Plts</th>
                    <th>New Plts</th>
                    <th>Ttl Pick Plts</th>
                    <th>Location</th>
                    <th>Operation</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<div class="iframe">
    <div>
        <input id="input-upload" type="file" />
    </div>
    <div>
        <input id="btn-uploadfile" type="button" class="btn btn-default" value="Upload" />
    </div>
</div>
<div class="iframe-update">
    <div style="text-align:center">
        <text>Pick man: </text><input id="input-pickman" class="input-sm" style="width:170px;margin-top:20px" /><br />
        <text>Pick date: </text><input id="input-pickdate" type="date" style="width:170px;margin-top:20px" /><br />
    </div>
    <div style="text-align:right">
        <button id="btn-update" class="btn btn-primary" style="margin-top:20px;margin-right:20px">Update</button>
    </div>
</div>
<div class="iframe-cartons">
    <div style="margin-left:20px;margin-right:20px">
        <h1>Pallet Content</h1>
        <table id="table-ctnsinplt" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th style="width:16px">Id</th>
                    <th>Status</th>
                    <th style="width:103px">FBA shmt ID./SKU</th>
                    <th style="width:64px">Amz Ref ID.</th>
                    <th>FBA Code</th>
                    <th>GW/Ctn</th>
                    <th>CBM/Ctn</th>
                    <th>Ctns/Plt</th>
                    <th>Original Ttl Ctns</th>
                    <th>Available Ttl Ctns</th>
                    <th>Pick Ctns</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="iframe-pickpallet">
    <div style="margin-left:20px;margin-right:20px">
        <h1>Pallet Content</h1>
        <table id="table-pickpallet" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th style="width:20px">Id</th>
                    <th>Status</th>
                    <th style="width:103px">FBA shmt ID./SKU</th>
                    <th style="width:64px">Amz Ref ID.</th>
                    <th>FBA Code</th>
                    <th>GW/Ctn</th>
                    <th>CBM/Ctn</th>
                    <th>Ctns/Plt</th>
                    <th>Original Ttl Ctns</th>
                    <th>Available Ttl Ctns</th>
                    <th>Pick Ctns</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
        <div style="text-align:right">
            <text>Number of Plts from Inventory: </text><input id="input-pickpallet" class="input-sm" placeholder="Inventory pallet quantity" value="0" /><br />
            <text>Number of new Plts: </text><input id="input-newpallet" class="input-sm" placeholder="New pallet quantity" value="0" /><br />
            <button id="btn-pickpallet" class="btn btn-primary">Pick</button>
        </div>
    </div>
</div>
@*<div class="iframe-pickcarton">
    <div style="text-align:center">
        <text>Pick cartons: </text><input id="input-carton-ctns" class="input-sm" style="width:170px;margin-top:20px" />
    </div>
    <div style="text-align:right">
        <button id="btn-carton-pick" class="btn btn-primary" style="margin-top:20px;margin-right:20px">Update</button>
    </div>
</div>*@
@section scripts
{
    <script>
        $(document).ready(function () {

            $(".iframe,.iframe-update, .iframe-cartons").hide();
            $(".iframe-inventory, .iframe-pickpallet, .iframe-pickcarton").hide();

            var index;
            var operation;
            var status;
            var table;
            var tablePallet;
            var tableCarton;
            var tablePickPallet
            var url;
            var currentType;
            var ctnsInPltTable;
            var shipOrderId = getUrlParameter('shipOrderId');
            //var orderType = getUrlParameter('orderType');
            var container;
            var palletLocationId;

            //点击诊断系统，查看所有诊断
            $("#btn-diag").on("click", function () {
                $(window.location).attr('href', '/thirdpartylogistics/pullsheetdiagnostics/?shipOrderId=' + shipOrderId + "&shipOrderType=FBA");
            });

            //获取该订单的拣货列表
            GetPickDetailTable(shipOrderId, table);

            //点击上传出货清单按钮，弹出上传文件对话框
            $("#div-create").on("click", ".btn-create1", function () {
                operation = $(this).attr("operation");
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["400px", "200px"],
                    content: $(".iframe")
                });
            });

            //点击更新拣货信息按钮，弹出更新拣货信息对话框
            $(".btn-updatepickinfo").on("click", function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["400px", "200px"],
                    content: $(".iframe-update")
                });
            });

            //点击拣货按钮，完成一键拣货
            $(".btn-pick").on("click", function () {
                container = $("#input-container").val() == "" ? "NULL" : $("#input-container").val();
                var customerCode = $("#input-customer").val() == "" ? "NULL" : $("#input-customer").val();
                var shipmentId = $("#input-shipmentid").val() == "" ? "NULL" : $("#input-shipmentid").val();
                var amzRefId = $("#input-amzref").val() == "" ? "NULL" : $("#input-amzref").val();
                //var howToDeliver = $("#input-deliver").val() == "" ? "NULL" : $("#input-deliver").val();
                var howToDeliver = "NULL";
                var warehouseCode = $("#input-warehouse").val() == "" ? "NULL" : $("#input-warehouse").val();

                var obj = {
                    "container": container,
                    "customerCode": customerCode,
                    "shipmentId": shipmentId,
                    "amzRefId": amzRefId,
                    "howToDeliver": howToDeliver,
                    "warehouseCode": warehouseCode
                };

                url = "/api/fba/fbapickdetail/?shipOrderId=" + shipOrderId + "&orderType=" + $(this).attr('ordertype');

                if (container == "NULL" && customerCode == "NULL" && shipmentId == "NULL" && warehouseCode == "NULL")
                    layer.alert("Container, Customer Code, Shipment Id, Warehouse Code中至少要有一个不为空。");
                else
                    SendAjaxMethod("POST", url, obj);
            });

            //点击托盘拣货列表中的View按钮，查看该托盘内容
            $("#table").on("click", ".btn-view", function () {
                iframeIndex = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["1000px", "400px"],
                    content: $(".iframe-cartons")
                });

                var id = $(this).attr('iid');
                url = "/api/fba/FBAPickDetail/?pickDetailId=" + id;
                var ctnsInPltColumnArray = [
                    {
                        data: "id",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "status",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "shipmentId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "amzRefId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "warehouseCode",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "grossWeightPerCtn",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "cbmPerCtn",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "ctnsPerPlt",
                        render: function (data) {
                            return "<font color='orange'>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualQuantity",
                        render: function (data) {
                            return "<font color='orange'>" + data + "</font>";
                        }
                    },
                    {
                        data: "availableCtns",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "pickingCtns",
                        render: function (data) {
                            return "<font color='red'>" + data + "</font>";
                        }
                    }
                ];

                GetAjaxTable("GET", url, "#table-ctnsinplt", ctnsInPltTable, ctnsInPltColumnArray);
            });

            //点击拣货列表中的Put Back按钮，将选中对象放回原处
            $("#table").on("click", ".btn-putback", function () {
                url = "/api/fba/fbapickdetail/?pickDetailId=" + $(this).attr('iid');
                SendAjaxMethodWithoutReloadPage("DELETE", url, "");
            });

            //点击从库存拣货，打开库存拣货界面
            $("#btn-inventory").on("click", function () {
                $(".iframe-inventory").show();
            });

            //点击库存拣货界面的搜索按钮，获取可被拣货的列表
            $("#btn-search").on("click", function () {
                container = $("#input-inventory-container").val();
                var sku = $("#input-inventory-sku").val();
                var amzRef = $("#input-inventory-amzref").val();
                var warehouseCode = $("#input-inventory-warehousecode").val();

                if (container != "" || sku != "" || amzRef != "" || warehouseCode != "")
                {
                    GetPickInventoryTable(container, sku, amzRef, warehouseCode, tablePallet, tableCarton);
                }
            });

            //点击库存表中的All Pick按钮，将所有货全拣
            $("#table-pallet, #table-carton").on("click", ".btn-inventory-allpick", function () {
                var inventoryType = $(this).attr('inventorytype');
                var inventoryId = $(this).attr('iid');

                url = "/api/fbapickdetail/?shipOrderId=" + shipOrderId + "&inventoryId=" + inventoryId + "&inventoryType=" + inventoryType + "&operation=AllPick";
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        container = $("#input-inventory-container").val();
                        if (container != "") {
                            GetPickInventoryTable(container, tablePallet, tableCarton);
                            GetPickDetailTable(shipOrderId, table);
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击库存表中的Pick按钮，弹出拣货细节对话框
            $("#table-pallet, #table-carton").on("click", ".btn-inventory-pick", function () {
                var inventoryType = $(this).attr('inventorytype');
                var inventoryId = $(this).attr('iid');

                if (inventoryType == "Pallet")
                {
                    palletLocationId = inventoryId;
                    Openiframe(index, ".iframe-pickpallet", "1000px", "500px");

                    url = "/api/fba/fbainventory/?palletLocationId=" + inventoryId;
                    var ctnsInPltColumnArray = [
                        {
                            data: "id",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "status",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "shipmentId",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "amzRefId",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "warehouseCode",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "grossWeightPerCtn",
                            render: function (data) {
                                return "<font color='green'>" + data + "</font>";
                            }
                        },
                        {
                            data: "cbmPerCtn",
                            render: function (data) {
                                return "<font color='green'>" + data + "</font>";
                            }
                        },
                        {
                            data: "ctnsPerPlt",
                            render: function (data) {
                                return "<font color='orange'>" + data + "</font>";
                            }
                        },
                        {
                            data: "actualQuantity",
                            render: function (data) {
                                return "<font color='orange'>" + data + "</font>";
                            }
                        },
                        {
                            data: "availableCtns",
                            render: function (data) {
                                return "<font color='green'>" + data + "</font>";
                            }
                        },
                        {
                            data: "id",
                            render: function (data) {
                                return "<input type='number' class='input-sm input-cartons' iid='" + data + "' placeholder='Input ctn #' value='0' />";
                            }
                        }
                    ];
                    GetAjaxTable("GET", url, "#table-pickpallet", tablePickPallet, ctnsInPltColumnArray);
                }
            });

            //点击箱数拣货按钮，拣取所填数量不为0的对象到拣货列表中
            $("#btn-pickcarton").on("click", function () {
                var objArray = new Array();

                $(".input-pickcarton").each(function (i) {
                    if ($(this).val() != "")
                    {
                        var obj = {
                            "id": $(this).attr('iid'),
                            "quantity": $(this).val()
                        };

                        objArray.push(obj);
                    }
                });

                if (objArray.length > 0)
                {
                    url = "/api/fba/fbapickdetail/?shipOrderId=" + shipOrderId + "&inventoryLocationId=0&quantity=0&newQuantity=0&inventoryType=Carton";
                    SendAjaxMethodWithoutReloadPage("POST", url, objArray);
                }
            });

            //点击托盘库存拣货列表中的pick按钮，拣取所输托盘箱数和托数
            $("#btn-pickpallet").on("click", function () {
                var pickPlts = $("#input-pickpallet").val() == "" ? 0 : $("#input-pickpallet").val();
                var newPlts = $("#input-newpallet").val() == "" ? 0 : $("#input-newpallet").val();
                var objArray = new Array();

                $(".input-cartons").each(function (i) {
                    var availableCtns = $(this).parent().parent("tr").children('td').eq(9).children('font').html();
                    //if ($(this).val() != "" && parseInt($(this).val()) <= parseInt(availableCtns))
                    //{
                    //    var id = $(this).attr('iid');
                    //    var cartons = $(this).val();
                    //    var obj = {
                    //        "id": id,
                    //        "quantity": cartons
                    //    };

                    //    objArray.push(obj);
                    //}
                    //else
                    //{
                    //    alert("请检查拣货数量是否充足。");
                    //}

                    var id = $(this).attr('iid');
                    var cartons = $(this).val();
                    var obj = {
                        "id": id,
                        "quantity": cartons
                    };

                    objArray.push(obj);
                });

                if (objArray.length > 0)
                {
                    url = "/api/fba/fbapickdetail/?shipOrderId=" + shipOrderId + "&inventoryLocationId=" + palletLocationId + "&quantity=" + pickPlts + "&newQuantity=" + newPlts +"&inventoryType=Pallet";
                    SendAjaxMethodWithoutReloadPage("POST", url, objArray);
                }
            });

            //点击关闭按钮，关闭库存件货界面
            $("#div-partial").on("click", ".btn-close", function () {
                $(".iframe-inventory").hide();
            });

            //点击上传，上传Template文件
            $("#btn-uploadfile").on("click", function () {

                var formData = new FormData();
                var files = $("#input-upload").get(0).files;

                if (files.length > 0)
                {
                    formData.append("fileName", files[0]);
                    url = "/api/fba/FBAPickDetail/?shipOrderId=" + shipOrderId + "&operation=" + operation;

                    if (operation == "UploadBOL")
                    {
                        SendUploadAjaxMethodAndDownloadFile("POST", url, formData);
                    }
                    else
                    {
                        SendUploadAjaxMethod("POST", url, formData);
                    }
                }
                else
                {
                    alert("Please choose file first.");
                }
            });

            //点击下载pickinglist，下载pickinglist
            $(".btn-download").on("click", function () {
                url = "/api/fba/fbapickdetail/?shipOrderId=" + shipOrderId + "&operation=Download";
                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success!");
                        $(window.location).attr('href', '/api/fba/downloadfile/?fullPath=' + encodeURIComponent(data));
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });

            });

            //解析url中的参数函数
            function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };

            function GetAjaxTable(methodType, url, tableId, table, columsArray) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        if (table) {
                            table.destroy();
                        }

                        table = $(tableId).DataTable({
                            data: data,
                            destroy: true,
                            //scrollX: true,
                            order: [[1, "asc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: columsArray
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function SendAjaxMethod(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(obj),
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success!", function () {
                            window.location.reload();
                        })
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function SendAjaxMethodWithoutReloadPage(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(obj),
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        container = $("#input-inventory-container").val();
                        if (container != "") {
                            GetPickInventoryTable(container, tablePallet, tableCarton);
                            GetPickDetailTable(shipOrderId, table);
                        }
                        GetPickDetailTable(shipOrderId, table);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function GetPickInventoryTable(container, sku, amzRef, warehouseCode, tablePallet, tableCarton) {

                url = "/api/fba/fbainventory/?container=" + container + "&sku=" + sku + "&amzRef=" + amzRef + "&warehouseCode=" + warehouseCode +"&inventoryType=Pallet";
                var palletsColumnArray = [
                        {
                            data: "id",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "status",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "container",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "shipmentId",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "amzRefId",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "palletSize",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "warehouseCode",
                            render: function (data) {
                                return "<text>" + data + "</text>";
                            }
                        },
                        {
                            data: "grossWeightPerPlt",
                            render: function (data) {
                                return "<font color='green'>" + data + "</font>";
                            }
                        },
                        {
                            data: "cbmPerPlt",
                            render: function (data) {
                                return "<font color='green'>" + data + "</font>";
                            }
                        },
                        {
                            data: "ctnsPerPlt",
                            render: function (data) {
                                return "<font color='green'>" + data + "</font>";
                            }
                        },
                        {
                            data: "actualQuantity",
                            render: function (data) {
                                return "<font color='orange'>" + data + "</font>";
                            }
                        },
                        {
                            data: "actualPlts",
                            render: function (data) {
                                return "<font color='orange'>" + data + "</font>";
                            }
                        },
                        {
                            data: "availablePlts",
                            render: function (data) {
                                return "<font color='green'>" + data + "</font>";
                            }
                        },
                        {
                            data: "location",
                            render: function (data) {
                                return "<font color='orange'>" + data + "</font>";
                            }
                        },
                        {
                            data: "id",
                            render: function (data) {
                                return "<input type='button' class='btn btn-link btn-inventory-pick' inventorytype='Pallet' iid='" + data + "' value='Pick' /><input type='button' class='btn btn-link btn-inventory-allpick' inventorytype='Pallet' iid='" + data + "' value='All Pick' />";
                            }
                        }
                ]
                GetAjaxTable("GET", url, "#table-pallet", tablePallet, palletsColumnArray);

                url = "/api/fba/fbainventory/?container=" + container + "&sku=" + sku + "&amzRef=" + amzRef + "&warehouseCode=" + warehouseCode + "&inventoryType=Carton";
                var cartonsColumnArray = [
                    {
                        data: "id",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "status",
                        render: function (data) {
                            status = data;
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "container",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "shipmentId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "amzRefId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "warehouseCode",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "grossWeightPerCtn",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "cbmPerCtn",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualQuantity",
                        render: function (data) {
                            return "<font color='orange'>" + data + "</font>";
                        }
                    },
                    {
                        data: "availableCtns",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "location",
                        render: function (data) {
                            return "<font color='orange'>" + data + "</font>";
                        }
                    },
                    {
                        data: "id",
                        render: function (data) {
                            if (status != "InPallet")
                                return "<input type='button' class='btn btn-link btn-inventory-allpick' inventorytype='Carton' iid='" + data + "' locationtype='Carton' value='All Pick' />";
                            else
                                return "";
                        }
                    },
                    {
                        data: "id",
                        render: function (data) {
                            if (status != "InPallet")
                                return "<input type='number' class='input-sm input-pickcarton' inventorytype='Carton' iid='" + data + "' locationtype='Carton' placeholder='Input ctn #' />";
                            else
                                return "";
                        }
                    },
                ]
                GetAjaxTable("GET", url, "#table-carton", tableCarton, cartonsColumnArray);
            };

            function GetPickDetailTable(shipOrderId, table) {
                url = "/api/fba/fbapickdetail/?shipOrderId=" + shipOrderId;
                var columnArray = [
                    {
                        data: "id",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "status",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "grandNumber",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "container",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "orderType",
                        render: function (data) {
                            currentType = data;
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "shipmentId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "amzRefId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "size",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "howToDeliver",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "warehouseCode",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "actualGrossWeight",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualCBM",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "ctnsPerPlt",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualQuantity",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "pltsFromInventory",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "newPlts",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualPlts",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "location",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "id",
                        render: function (data) {
                            if (currentType == "Standard")
                                return "<button class='btn btn-link btn-view' iid='" + data + "'>View</button><button class='btn btn-link btn-putback' iid='" + data + "'>Put Back</button>";
                            else
                                return "<button class='btn btn-link btn-putback' iid='" + data + "'>Put Back</button>";
                        }
                    },
                ];
                GetAjaxTable("GET", url, "#table", table, columnArray);
            }

            function Openiframe(index, elementId, width, height) {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: [width, height],
                    content: $(elementId)
                });
            };

            function SendUploadAjaxMethodAndDownloadFile(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: false,
                    cache: false,
                    processData: false,
                    data: obj,
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success! The BOL will be downloaded automatically.");
                        $(window.location).attr('href', '/api/fba/downloadfile/?fileName=' + data);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function SendUploadAjaxMethod(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: false,
                    cache: false,
                    processData: false,
                    data: obj,
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success!", function () {
                            window.location.reload();
                        })
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });
    </script>
}