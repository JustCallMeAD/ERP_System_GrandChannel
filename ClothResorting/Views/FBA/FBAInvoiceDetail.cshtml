
@{
    ViewBag.Title = "FBAInvoiceDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>FBA System</h1>
<h2>FBA Invoice Detail Page</h2>
<h2 id="h2-reference">Reference:</h2>
<h2 id="h2-customer">Customer:</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
        <button style="margin-left:20px" class="btn btn-danger btn-save">Save</button>
    </div>
    <div id="div-summary" style="margin-top:20px;border:double">
        <h2>Pick Summary</h2>
        <table id="table-summary" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Status</th>
                    <th>Grand #</th>
                    <th>Container #</th>
                    <th>Type</th>
                    <th style="width:206px">FBA shmt ID./SKU</th>
                    <th style="width:64px">Amz Ref ID.</th>
                    <th>Size</th>
                    <th>Delivery</th>
                    <th>Warehouse Code</th>
                    <th>Gross Weight</th>
                    <th>CBM</th>
                    <th>Ctns/Plt</th>
                    <th>Ttl Pick Ctns</th>
                    <th>Inventory Plts</th>
                    <th>New Plts</th>
                    <th>Ttl Outbound Plts</th>
                    <th>Location</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div style="margin-top:20px;border:double">
        <h2>Charging Item Board</h2>
        <button id="btn-detail-create" class="btn btn-primary">Add charging detail</button>
        <div>
            <table id="table-detail" class="table table-condensed table-hover table-striped" style="table-layout:fixed;word-wrap:break-word;">
                <thead>
                    <tr>
                        <th style="width:66px">Id</th>
                        <th>Description</th>
                        <th>Comment</th>
                        <th>Result</th>
                        <th style="width:180px">Comment Status</th>
                        <th style="width:180px">Charging Status</th>
                        <th style="width:180px">OPERATION</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div style="margin-top:20px;border:double">
        <h2>Invoice Detail</h2>
        <div id="div-create">
            <button id="btn-create" class="btn btn-primary">Add charging item</button>
            <button id="btn-download" class="btn btn-primary">Export Excel File</button>
        </div>
        <table id="table" class="table table-condensed table-hover table-striped" style="table-layout:fixed;word-wrap:break-word;">
            <thead>
                <tr>
                    <th style="width:45px">Id</th>
                    <th>ACT</th>
                    <th>TYPE</th>
                    <th>UOM</th>
                    <th>QTY</th>
                    <th>RATE</th>
                    <th>ORG AMT</th>
                    <th>DSCT</th>
                    <th>FNL AMT</th>
                    <th>COST</th>
                    <th>NET</th>
                    <th>IVC TYPE</th>
                    <th>COST DATE</th>
                    <th>MEMO</th>
                    <th style="width:100px">COST CONFIRM</th>
                    <th style="width:100px">PAYMENT</th>
                    <th style="width:100px">COLLECT</th>
                    <th style="width:40px">OP</th>
                    <th style="width:150px">OPERATION</th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <th colspan="8" style="text-align:right">BALANCE DUE:</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
<div class="iframe">
    <div id="div-iframe" style="margin-top:20px;margin-right:20px;text-align:right">
        <text id="text-number">Reference #:</text><br />
        <div style="margin-top:20px">
            <text id="text-ordertype">Charging Order Type:</text>
        </div>
        <div id="div-quantity" style="margin-top:20px">
            <text style="margin-left:20px">ORG PLTS: <button id="text-org-plts" class="btn btn-link">ORG PLTS</button></text><text style="margin-left:20px">PLTS: <button id="text-plts" class="btn btn-link">PLTS</button></text><text>CTNS: <button id="text-ctns" class="btn btn-link">Cartons</button></text>
        </div>
        <div id="div-date" style="margin-top:20px">
            <text>Date of Cost: <input id="input-date" type="date" /></text>
        </div>
        <div id="div-type" style="margin-top:20px">
            <text>Select a charging type: </text><select id='select-type' style='width:170px;height:30px' required='required'>
                <option>Loading...</option>
            </select>
        </div>
        <div id="div-name" style="margin-top:20px">
            <text>Charging item name: </text><select id="select-name" style='width:170px;height:30px' required='required'>
                <option>Select a charging type</option>
            </select>
        </div>
        <div id="div-rate" style="margin-top:20px">
            <text>Cost: </text><input type="number" id="input-cost" class="input-sm input-calculator" style='width:80px;height:30px' placeholder="Cost" value="0" />
            <text style="margin-left:20px">Rate: </text><input type="number" id="input-rate" class="input-sm input-calculator" style='width:80px;height:30px' placeholder="Rate" /><text>/</text><text id="text-unit">CTN</text><text style="margin-left:20px">Quantity: <input type="number" id="input-quantity" class="input-sm input-calculator" style='width:80px;height:30px' placeholder="QTY" /></text><br />
        </div>
        <div id="div-description" style="margin-top:20px">
            <text id="text-description">Description:: </text><br />
        </div>
        <div id="div-memo" style="margin-top:20px">
            <text>Memo: <textarea id="input-memo" style='width:170px;height:75px' placeholder="(Optional)"></textarea></text><br />
        </div>
        <div id="div-amount" style="margin-top:20px">
            <text>Original Amount: <input id="input-amount" class="input-sm" type="number" style="width:80px"></text><br />
            <text>Discount: <input id="input-discount" class="input-sm" type="number" style="width:80px;margin-top:10px" value="1"></text>
        </div>
            <button style="margin-top:20px" id="btn-charge" class='btn btn-primary'>Charge</button>
            <button style="margin-top:20px" id="btn-update" class='btn btn-primary'>Update</button>
    </div>
</div>
<div class="iframe-detail">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Description: </text><input id='input-detail-description' style='width:400px' class='input-sm' /><br />
        <text>Is charging item</text><input type="checkbox" id="cb-charge" /><br />
        <button id="btn-detail-add" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">create</button>
    </div>
</div>
<div class="iframe-save">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Select Close Date: </text><input type="date" id='input-closedate' style='width:170px' class='input-sm' /><br />
        <text>Apply minimum charge </text><input id="input-ismincharge" type="checkbox" /><br />
        <button id="btn-save" class='btn btn-danger' style="margin-top:20px;margin-right:20px;text-align:right">Save&Close</button>
    </div>
</div>
<div class="iframe-ship">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Select ShipDate: </text><input type="date" id='input-shipdate' style='width:170px' class='input-sm' /><br />
        <button id="btn-ship" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Mark Ship</button>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {

            $(".iframe, .iframe-ship").hide();
            $(".iframe-detail").hide();
            $(".iframe-save").hide();

            var index;
            var table;
            var tableDetail;
            var chargingType;
            var quantity;
            var customerCode;
            var invoiceDetailId;
            var url;

            var chargingItemDetailColumnArray = [
                {
                    data: "id",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "description",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "comment",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "result",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "handlingStatus",
                    render: function (data) {
                        if (data == "New")
                            return "<font color='blue'>" + data + "</font>";
                        else if (data == "Pending")
                            return "<font color='red'>" + data + "</font>";
                        else if (data == "Returned")
                            return "<font color='Orange'>" + data + "</font>";
                        else if (data == "Finished")
                            return "<font color='green'>" + data + "</font>";
                        else
                            return "<font color='purple'>" + data + "</font>";
                    }
                },
                {
                    data: "status",
                    render: function (data) {
                        if (data == "Waiting for charging")
                            return "<font color='red'>" + data + "</font>";
                        else if(data == "Unhandled")
                            return "<font color='blue'>" + data + "</font>";
                        else
                            return "<font color='green'>" + data + "</font>";
                    }
                },
                {
                    data: "id",
                    render: function (data) {
                        //return "<button iid='" + data + "' class='btn btn-link btn-detail-mark'>Mark</button><button iid='" + data + "' class='btn btn-link btn-detail-delete'>Delete</button>";
                        return "<button iid='" + data + "' class='btn btn-link btn-detail-mark'>Mark</button>";
                    }
                }
            ];

            //解析url中的参数函数
            function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };

            var customerId = getUrlParameter('customerId');
            var reference = getUrlParameter('reference');
            var invoiceType = getUrlParameter('invoiceType');
            var shipOrderId = getUrlParameter('shipOrderId');

            if (shipOrderId == undefined || shipOrderId == "undefined")
            {
                $("#div-summary").hide();
            }

            if (invoiceType == "MasterOrder")
            {
                $("#h2-reference").html("Master Order #: " + reference);
                $("#btn-ready").hide();
            }
            else if (invoiceType == "ShipOrder")
            {
                $("#h2-reference").html("Ship Order #: " + reference);
            }

            //获取客户代码
            $.ajax({
                type: "GET",
                contentType: 'application/json, charset=utf-8',
                dataType: "json",
                url: "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&isChargingItemDetail=false",
                success: function (data) {
                    customerCode = data;
                    $("#h2-customer").html("Customer: " +customerCode);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            //获取收费项目草表
            $.ajax({
                type: "GET",
                contentType: 'application/json, charset=utf-8',
                dataType: "json",
                url: "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&isChargingItemDetail=true",
                success: function (data) {
                    if (tableDetail) {
                        tableDetail.destroy();
                    }
                    tableDetail = $("#table-detail").DataTable({
                        data: data,
                        order: [[0, "desc"]],
                        destroy: true,
                        scrollCollapse: true,
                        scrollY: "600px",
                        iDisplayLength: 100,
                        columns: chargingItemDetailColumnArray
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            //获取收费项目细节
            url = "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType;
            GetAjaxTable(url);

            if (shipOrderId != undefined && shipOrderId != "undefined")
            {
                //获取pickdetailsummary
                GetPickDetailTable(shipOrderId, table);
            }

            //添加收费项目，打开新建弹窗
            $("#btn-create").click(function () {

                $("#btn-charge").show();
                $("#btn-update").hide();

                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["550px", "650px"],
                    content: $(".iframe")
                });
            })

            // Ajax0, GET柜号/PO号、BillTo等信息
            $.ajax({
                type: "GET",
                contentType: "application/json, charset=8-utf",
                dataType: "json",
                url: "/api/FBAInvoiceDetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&ajaxStep=0",
                success: function (data) {
                    $("#text-number").html("Reference: " + reference);
                    $("#text-ordertype").html("Invoice from: " + invoiceType);
                    $("#text-ctns").html(data.cartons);
                    $("#text-plts").html(data.pallets);
                    $("#text-org-plts").html(data.originalPallets);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            //点击数字按钮，将点击的数字自动填入到Quantity中并计算总数

            // Ajax1, 获取该部门该Vendor适用的收费类型
            $.ajax({
                type: "GET",
                url: "/api/FBAinvoiceDetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&ajaxStep=1",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {

                    $("#select-type").find("option:selected").text("");
                    $("#select-type").empty();
                    $("#select-type").append("<option value='empty'>Select a charging type</option>");

                    for (var i = 0; i < data.length; i++) {
                        $("#select-type").append("<option value='" + data[i] + "'>" + data[i] + "</option>");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            // Ajax2, 改变下拉菜单的收费类型，获取该收费类型的所有选项
            $("#select-type").on("change", function () {
                chargingType = $("#select-type option:selected").val();

                if (chargingType != "empty")
                {
                    $.ajax({
                        type: "GET",
                        url: "/api/FBAInvoiceDetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&chargingType=" + chargingType,
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function (data) {

                            $("#select-name").find("option:selected").text("");
                            $("#select-name").empty();
                            $("#select-name").append("<option value='empty'>Select a charging item</option>");

                            for (var i = 0; i < data.length; i++) {
                                $("#select-name").append("<option value='" + data[i] + "'>" + data[i] + "</option>");
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                window.location.reload();
                            });
                        }
                    });
                }
            });

            //Ajax3, 选择收费项目，更新新建页面的单位、单价、描述等选项
            $("#select-name").on("change", function () {
                var itemName = $("#select-name").val();

                if(itemName != "empty")
                {
                    $.ajax({
                        type: "GET",
                        url: "/api/FBAinvoiceDetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&itemName=" + encodeURIComponent(itemName),
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function (data) {
                            $("#input-rate").val(data.rate);
                            $("#text-unit").html(data.unit);
                            $("#text-description").html(data.description);

                            if (data.unit == "CTN")
                            {
                                quantity = $("#text-ctns").html();
                                $("#input-quantity").val(quantity);
                            }
                            else if (data.unit == "PLT")
                            {
                                quantity = $("#text-plts").html();
                                $("#input-quantity").val(quantity);
                            }
                            else
                            {
                                quantity = 0;
                                $("#input-quantity").val(0);
                            }

                            $("#input-amount").val((data.rate * quantity).toFixed(2));
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                window.location.reload();
                            });
                        }
                    });
                }
            });

            //Ajax4, 保存添加该收费项目
            $("#btn-charge").on("click", function () {

                var chargingType = $("#select-type option:selected").val();
                var activity = $("#select-name option:selected").val();
                var dateOfCost = $("#input-date").val();
                var cost = $("#input-cost").val();
                var amount = $("#input-amount").val();
                var discount = $("#input-discount").val();

                if (dateOfCost == "" || amount == "")
                {
                    alert("Date or amount cannot be empty.");
                }
                else if (chargingType != "empty" && activity != "empty")
                {
                    var unit = $("#text-unit").html();
                    var rate = $("#input-rate").val();
                    var amount = $("#input-amount").val();
                    var quantity = $("#input-quantity").val();
                    var memo = $("#input-memo").val();

                    var obj = {
                        "activity": activity,
                        "chargingType": chargingType,
                        "dateOfCost": dateOfCost,
                        "unit": unit,
                        "rate": rate,
                        "discount": discount == "" ? 1 : discount,
                        "amount": amount,
                        "quantity": quantity,
                        "memo": memo,
                        "cost": cost
                    };

                    $.ajax({
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        url: "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType,
                        data: JSON.stringify(obj),
                        success: function () {
                            layer.alert("Add success!", function () {

                                layer.close(layer.index);
                                layer.close(index);

                                url = "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType;
                                GetAjaxTable(url);
                            });
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                window.location.reload();
                            });
                        }
                    });
                }
            });

            //监控输入的费率和数量，当这两个input变化时改变Amount的值
            $(".input-calculator").on("change", function () {
                var rate = 0;
                var quantity = 0;
                rate = $("#input-rate").val();
                quantity = $("#input-quantity").val();

                var amount = parseFloat((rate * quantity).toFixed(2));

                $("#input-amount").val(amount);
            });

            //Ajax5, 点击删除按钮，删除所选收费项目并自动重新计算总数
            $("#table").on("click", ".btn-delete", function () {
                var id = $(this).attr('iid');

                $.ajax({
                    type: "DELETE",
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    url: "/api/invoicedetail/" + id,
                    success: function () {
                        layer.alert("Delete success!", function () {
                            window.location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击下载按钮，下载当前单的所有条目到Excel文件
            $("#btn-download").on("click", function () {
                $.ajax({
                    type: "GET",
                    url: "/api/fba/FBAReportDonwload/?reference=" + reference + "&invoicetype=" + invoiceType,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success! File will download automatically.");
                        $(window.location).attr('href', "/api/fba/FBAReportDonwload/?fullPath=" + encodeURIComponent(data).toString() + "&prefix=InvoiceReport&suffix=" + encodeURIComponent(".xls"));
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击添加收费草表项目按钮，打开一个简易填写界面
            $("#btn-detail-create").on("click", function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });
            });

            //点击添加草表按钮，添加草表
            $("#btn-detail-add").on("click", function () {
                var description = $("#input-detail-description").val();
                var isChargingItem = $("#cb-charge").prop("checked");

                if (description != "") {
                    layer.close(index);
                    url = "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&description=" + encodeURIComponent(description) + "&isChargingItem=" + isChargingItem;
                    var obj = {"content" : "N/A"};
                    SendAjaxMethod("POST", url, obj);
                }
            });

            //点击收费草表中的Mark按钮，切换选中对象的收费状态
            $("#table-detail").on("click", ".btn-detail-mark", function () {
                var id = $(this).attr('iid');

                url = "/api/fba/fbainvoicedetail/?chargingItemDetailId=" + id;

                $.ajax({
                    type: "PUT",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $.ajax({
                            type: "GET",
                            contentType: 'application/json, charset=utf-8',
                            dataType: "json",
                            url: "/api/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&isChargingItemDetail=true",
                            success: function (data) {
                                if (tableDetail) {
                                    tableDetail.destroy();
                                }
                                tableDetail = $("#table-detail").DataTable({
                                    data: data,
                                    order: [[0, "desc"]],
                                    destroy: true,
                                    scrollCollapse: true,
                                    scrollY: "600px",
                                    iDisplayLength: 100,
                                    columns: chargingItemDetailColumnArray
                                });
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                    window.location.reload();
                                });
                            }
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击收费草表中的删除按钮，删除选中对象的收费状态
            $("#table-detail").on("click", ".btn-detail-delete", function () {
                var id = $(this).attr('iid');

                url = "/api/fba/fbainvoicedetail/?chargingItemDetailId=" + id;

                SendAjaxMethod("DELETE", url, {});
            });

            //点击保存按钮，弹出选择结单日期弹窗
            $(".btn-save").on("click", function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["400px", "150px"],
                    content: $(".iframe-save")
                });
            });

            //点击保存并退出按钮，将此单关闭，不可再更改
            $("#btn-save").on("click", function () {
                var closeDate = $("#input-closedate").val();

                if (closeDate != "")
                {
                    var isAppliedMinCharge = $("#input-ismincharge").is(":checked");
                    url = "/api/fba/fbainvoicedetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&closeDate=" + closeDate + "&isAppliedMinCharge=" + isAppliedMinCharge;
                    SendAjaxMethodAndBack("PUT", url, {});
                }
                else
                {
                    alert("Please select close date.");
                }
            });

            //点击编辑按钮，编辑收费项目
            $("#table").on("click", ".btn-edit", function () {

                $("#btn-update").show();
                $("#btn-charge").hide();

                invoiceDetailId = $(this).attr('iid');

                url = "/api/fbainvoicedetail/?invoiceDetailId=" + invoiceDetailId;

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index2 = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index2);

                        $("#select-type").val(data.chargingType);
                        $("#input-date").val(data.dateOfCost.toString().substring(0, 10));
                        $("#input-cost").val(data.cost.toFixed(2));
                        $("#text-unit").html(data.unit);
                        $("#input-rate").val(data.rate.toFixed(2));
                        $("#input-discount").val(data.discount.toFixed(2));
                        $("#input-amount").val(data.amount.toFixed(2));
                        $("#input-quantity").val(data.quantity);
                        $("#input-memo").val(data.memo);

                        //重新获取收费项目名称列表
                        $.ajax({
                            type: "GET",
                            url: "/api/FBAInvoiceDetail/?reference=" + reference + "&invoiceType=" + invoiceType + "&chargingType=" + data.chargingType,
                            contentType: 'application/json; charset=utf-8',
                            dataType: "json",
                            success: function (data2) {

                                $("#select-name").find("option:selected").text("");
                                $("#select-name").empty();
                                $("#select-name").append("<option value='empty'>Select a charging item</option>");

                                for (var i = 0; i < data2.length; i++) {
                                    $("#select-name").append("<option value='" + data2[i] + "'>" + data2[i] + "</option>");
                                }

                                $("#select-name").val(data.activity);
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                    window.location.reload();
                                });
                            }
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });

                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["550px", "650px"],
                    content: $(".iframe")
                });
            });

            //点击Update按钮，更新收费项目
            $("#btn-update").on("click", function () {

                url = "/api/fbainvoicedetail/?invoiceDetailId=" + invoiceDetailId;

                var chargingType = $("#select-type option:selected").val();
                var activity = $("#select-name option:selected").val();
                var dateOfCost = $("#input-date").val();
                var cost = $("#input-cost").val();
                var amount = $("#input-amount").val();
                var discount = $("#input-discount").val();

                if (dateOfCost == "" || amount == "")
                {
                    alert("Date or amount cannot be empty.");
                }
                else if (chargingType != "empty" && activity != "empty") {
                    var unit = $("#text-unit").html();
                    var rate = $("#input-rate").val();
                    var amount = $("#input-amount").val();
                    var quantity = $("#input-quantity").val();
                    var memo = $("#input-memo").val();

                    var obj = {
                        "activity": activity,
                        "chargingType": chargingType,
                        "dateOfCost": dateOfCost,
                        "unit": unit,
                        "discount": discount == "" ? 1 : discount,
                        "rate": rate,
                        "amount": amount,
                        "quantity": quantity,
                        "memo": memo,
                        "cost": cost
                    };

                    SendAjaxMethod("PUT", url, obj);
                }
            });

            //点击带颜色的按钮，改变状态
            $("#table").on("click", ".btn-status", function () {
                var buttonType = $(this).attr("btntype");
                var invoiceDetailId = $(this).parent().parent("tr").children('td').eq(0).children('text').html();

                url = "/api/fbainvoicedetail/?invoiceDetailId=" + invoiceDetailId + "&buttonType=" + buttonType;

                grandChannel.sendAjaxMethod("PUT", url, {}, index);
            });

            function SendAjaxMethod(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(obj),
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success!", function () {
                            window.location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function SendAjaxMethodAndBack(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(obj),
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success!", function () {
                            window.history.back(-1);
                            //$(window.location).attr('href', '/fba/FBAinvoiceDetailReadOnly/?reference=' + reference + "&invoiceType=" + invoiceType + "&invoiceStatus=Closed" + "&shipOrderId=" + shipOrderId);
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function GetAjaxTable(url) {
                $.ajax({
                    type: "GET",
                    contentType: 'application/json, charset=utf-8',
                    dataType: "json",
                    url: url,
                    success: function (data) {
                        if (table) {
                            table.destroy();
                        }

                        table = $("#table").DataTable({
                            data: data,
                            order: [[0, "desc"]],
                            destroy: true,
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: [
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "activity",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "chargingType",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "unit",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "quantity",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "rate",
                                    render: function (data) {
                                        return "<text>$" + parseFloat(data).toFixed(2) + "</text>";
                                    }
                                },
                                {
                                    data: "originalAmount",
                                    render: function (data) {
                                        return "<text>$" + parseFloat(data).toFixed(2) + "</text>";
                                    }
                                },
                                {
                                    data: "discount",
                                    render: function (data) {
                                        if (data == 1)
                                            return "<text>-</text>";
                                        return "<text>" + (100 - parseFloat(data).toFixed(2) * 100) + "% OFF</text>";
                                    }
                                },
                                {
                                    data: "amount",
                                    render: function (data) {
                                        return "<text>$" + parseFloat(data).toFixed(2) + "</text>";
                                    }
                                },
                                {
                                    data: "cost",
                                    render: function (data) {
                                        if (data == 0)
                                            return "<text>-</text>"
                                        return "<text>$" + parseFloat(data).toFixed(2) + "</text>";
                                    }
                                },
                                {
                                    data: "net",
                                    render: function (data) {
                                        return "<text>$" + parseFloat(data).toFixed(2) + "</text>";
                                    }
                                },
                                {
                                    data: "invoiceType",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "dateOfCost",
                                    render: function (data) {
                                        return "<text>" + data.toString().substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "memo",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "costConfirm",
                                    render: function (data) {
                                        if (data == true)
                                            return "<button btntype='Confirm' class='btn btn-default btn-status' style='background-color:darkseagreen;width:100px;text-aglin:left'>Confirmed</button>";
                                        else
                                            return "<button btntype='Confirm' class='btn btn-default btn-status' style='background-color:indianred;width:100px'>Unconfirmed</button>"
                                    }
                                },
                                {
                                    data: "paymentStatus",
                                    render: function (data) {
                                        if (data == true)
                                            return "<button btntype='Payment' class='btn btn-default btn-status' style='background-color:darkseagreen;width:100px'>Paid</button>";
                                        else
                                            return "<button btntype='Payment' class='btn btn-default btn-status' style='background-color:indianred;width:100px'>Unpaid</button>"
                                    }
                                },
                                {
                                    data: "collectionStatus",
                                    render: function (data) {
                                        if (data == true)
                                            return "<button btntype='Collection' class='btn btn-default btn-status' style='background-color:darkseagreen;width:100px'>Collected</button>";
                                        else
                                            return "<button btntype='Collection' class='btn btn-default btn-status' style='background-color:indianred;width:100px'>Uncollected</button>"
                                    }
                                },
                                {
                                    data: "operator",
                                    render: function (data) {
                                        if (data == null)
                                            return "";
                                        else
                                            return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<button class='btn btn-link btn-edit' iid='" + data + "'>Edit</button><button iid='" + data + "' class='btn btn-link btn-delete'>Delete</button>";
                                    }
                                }
                            ],
                            footerCallback: function (row, data, start, end, display) {

                                var api = this.api(), data;

                                var intVal = function (i) {
                                    return typeof i === 'string' ?
                                        i.replace(/[\$,]/g, '') * 1 :
                                        typeof i === 'number' ?
                                        i : 0;
                                };

                                var totalAmount = api
                                    .column(8)
                                    .data()
                                    .reduce(function (a, b) {
                                        return intVal(a) + intVal(b);
                                    }, 0);

                                $(api.column(8).footer()).html("<font color='red'>$" + parseFloat(totalAmount.toFixed(2)) + "</font>");
                            }
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function GetPickDetailTable(shipOrderId, table) {
                url = "/api/fba/fbapickdetail/?shipOrderId=" + shipOrderId;
                var columnArray = [
                    {
                        data: "id",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "status",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "grandNumber",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "container",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "orderType",
                        render: function (data) {
                            currentType = data;
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "shipmentId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "amzRefId",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "size",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "howToDeliver",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "warehouseCode",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "actualGrossWeight",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualCBM",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "ctnsPerPlt",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualQuantity",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "pltsFromInventory",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "newPlts",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualPlts",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    },
                    {
                        data: "location",
                        render: function (data) {
                            return "<font>" + data + "</font>";
                        }
                    }
                ];

                GetPickDetailSummary("GET", url, "#table-summary", table, columnArray);
            }

            function GetPickDetailSummary(methodType, url, tableId, table, columsArray) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        if (table) {
                            table.destroy();
                        }

                        table = $(tableId).DataTable({
                            data: data,
                            destroy: true,
                            scrollX: true,
                            order: [[1, "asc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: columsArray
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });
    </script>
}