
@{
    ViewBag.Title = "MasterOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>FBA System</h1>
<h2>Master Order Page（Receiving Order Page）</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div>
        <input id="btn-master" type="button" class="btn btn-primary" value="Creat new master order" />
        <input id="btn-ship" type="button" class="btn btn-primary" value="Manage ship order" />
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Grand No.</th>
                    <th>Inbound Type</th>
                    <th>Container Size</th>
                    <th>Container No.</th>
                    <th>Total CBM</th>
                    <th>Actual CBM</th>
                    <th>Total Ctns</th>
                    <th>Actual Ctns</th>
                    <th>Original Plts</th>
                    <th>Actual Plts</th>
                    <th>SKU #</th>
                    @*<th>Actual Plts</th>*@
                    <th>Inbound Date</th>
                    <th>ETA</th>
                    <th>Total Amount</th>
                    <th>Invoice Status</th>
                    <th>Close Date</th>
                    <th>Closed By</th>
                    <th>eFolder</th>
                    <th style="width:200px">Operation</th>
                    <th>Status</th>
                    <th style="width:150px">Status Control</th>
                    <th style="width:200px">INSTRUCTION</th>
                    <th style="width:80px">PUSH DATE</th>
                    <th style="width:80px">UNLOAD TIME</th>
                    <th style="width:80px">EPT CNTR AVA TIME</th>
                    <th style="width:80px">EPT CNTR OUT TIME</th>
                    <th style="width:200px">OPLOG</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="iframe">
    <h2 id="h2-title"></h2>
    <form id="form-create">
        <div style="margin-top:20px;margin-left:30px;text-align:right;float:left">
            <text>CARRIER: <input id='input-carrier' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>VESSEL: <input id='input-vessel' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>VOY: <input id='input-voy' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>ETA: <input name="eta" id='input-eta' type="date" style='width:170px;margin-top:20px' class='input-sm' /></text><br />
            <text>ETD: <input id='input-etd' type="date" style='width:170px;margin-top:20px' class='input-sm' /></text><br />
            <text>ETA PORT: <input id='input-etaPort' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>PLACE OF RECEIPT: <input id='input-receipt' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>PORT OF LOADING: <input id='input-pol' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
        </div>
        <div style="margin-top:20px;margin-right:20px;text-align:right;float:right">
            <text>PORT OF DISCHARGE: <input id='input-pod' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>PLACE OF DELIVERY: <input id='input-delivery' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>CONTAINER NO.: <input name="container" id='input-container' style='width:170px;margin-top:20px' class='input-sm' placeholder="Required" /></text><br />
            <text>Original Plts: <input type="number" name="plts" id='input-originalplts' style='width:170px;margin-top:20px' class='input-sm' placeholder="Required" value="0" /></text><br />
            <text>SEAL NO.: <input id='input-seal' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>INBOUND TYPE: <input name="type" id='input-inboundtype' style='width:170px;margin-top:20px' class='input-sm' placeholder="Required" /></text><br />
            <text>CONTAINER SIZE: <input id='input-size' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <text>INSTRUCTION: <input id='input-instruction' style='width:170px;margin-top:20px' class='input-sm' placeholder="Optional" /></text><br />
            <button type="button" id="btn-new" class='btn btn-primary' style="margin-top:20px">Create</button>
            <button type="button" id="btn-update" class='btn btn-primary' style="margin-top:20px">Update</button>
        </div>
    </form>
</div>
<div class="iframe-detail">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Description: </text><input id='input-detail-description' style='width:400px' class='input-sm' /><br />
        <text>Is charging item</text><input type="checkbox" id="cb-charge" /><br />
        <button id="btn-detail-add" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Create</button>
        <button id="btn-detail-update" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Update</button>
    </div>
</div>
<div class="iframe-detail-result">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Result: </text><input id='input-detail-result' style='width:400px' class='input-sm' /><br />
        <button id="btn-detail-result" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Update</button>
    </div>
</div>
<div class="iframe-fbadate">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Select Operation Date: </text><input type="datetime-local" id='input-operationdate' style='width:200px' class='input-sm' /><br />
        <button id="btn-confirm" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Confirm</button>
    </div>
</div>
@Html.Partial("~/Views/FBA/_FBAMasterOrderPartialView.cshtml", null)

@section scripts
{
    <script>
        $(document).ready(function () {

            var index;
            var beforeSendingIndex;
            var table;
            var url;
            var grandNumber;
            var masterOrderId;
            var customerCode;
            var container;
            var customerId;
            var invoiceStatuts;
            var pageId;

            $(".iframe-wo-push, .iframe-wo-view").hide();
            $(".iframe-wo-process").hide();
            $(".iframe, .iframe-fbadate").hide();

            //解析url中的参数函数
            function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };

            customerId = getUrlParameter('customerId');

            if (customerId != undefined) {
                //获取客户Id对应的所有总单
                url = "/api/fba/fbamasterorder/" + customerId;
            }
            else {
                //获取所有总单
                url = "/api/fba/fbamasterorder/";
                //隐藏建单按钮和查看用户运单按钮
                $("#btn-master").hide();
                $("#btn-ship").hide();
            }

            GetAjaxTable("GET", url);

            //点击新建主单按钮，打开新建主单弹窗
            $("#btn-master").on("click", function () {
                $("#btn-new").show();
                $("#btn-update").hide();
                $("#h2-title").html("Create new master order");

                $(".input-sm").val("");

                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["750px", "550px"],
                    content: $(".iframe")
                });
            });

            //点击管理运单，跳转至运单管理页面
            $("#btn-ship").on("click", function () {
                $(window.location).attr('href', '/shiporder/fbaShipOrder/?customerId=' + customerId);
            });

            //点击新建按钮，为当前客户新建一个主单
            $("#btn-new").on("click", function () {
                if (validform("#form-create").form()) {
                    var carrier = $("#input-carrier").val().toString();
                    var vessel = $("#input-vessel").val().toString();
                    var voy = $("#input-voy").val().toString();
                    var eta = $("#input-eta").val().toString();
                    var etd = $("#input-etd").val().toString();
                    var inboundType = $("#input-inboundtype").val().toString();
                    var etaPort = $("#input-etaPort").val().toString();
                    var placeOfReceipt = $("#input-receipt").val().toString();
                    var portOfLoading = $("#input-pol").val().toString();
                    var portOfDischarge = $("#input-pod").val().toString();
                    var placeOfDelivery = $("#input-delivery").val().toString();
                    var container = $("#input-container").val().toString();
                    var sealNumber = $("#input-seal").val().toString();
                    var containerSize = $("#input-size").val().toString();
                    var originalPlts = $("#input-originalplts").val();
                    var instruction = $("#input-instruction").val();

                    var obj = {
                        "carrier": carrier,
                        "vessel": vessel,
                        "voy": voy,
                        "eta": eta,
                        "etd": etd,
                        "etaPort": etaPort,
                        "placeOfReceipt": placeOfReceipt,
                        "portOfLoading": portOfLoading,
                        "portOfDischarge": portOfDischarge,
                        "placeOfDelivery": placeOfDelivery,
                        "container": container,
                        "sealNumber": sealNumber,
                        "containerSize": containerSize,
                        "inboundType": inboundType,
                        "originalPlts": originalPlts,
                        "instruction": instruction
                    };

                    url = "/api/fba/fbamasterorder/" + customerId;

                    SendAjaxMethod("POST", url, obj);
                }
                else {

                }

            });

            //点击管理总单按钮，进入所选总单的细节页面
            $("#table").on("click", ".btn-manage", function () {
                var grandNumber = $(this).attr('iid');
                $(window.location).attr('href', '/fba/MasterDetail/?grandNumber=' + grandNumber);
            });

            //点击费用按钮，进入收费项目登记页面
            $("#table").on("click", ".btn-fee", function () {
                $(window.location).attr('href', '/fba/FBAinvoiceDetail/?reference=' + $(this).attr('reference') + "&invoiceType=MasterOrder&invoiceStatus=" + $(this).attr('invoicestatus'));
            })

            //点击Update按钮更新信息
            $("#btn-updateinfo").on("click", function () {
                var container = $("#input-updatecontainer").val() == "" ? "NULL" : $("#input-updatecontainer").val();
                var inboundDate = $("#input-date").val();

                url = "/api/fba/FBAMasterOrder/?masterOrderId=" + masterOrderId + "&container=" + container + "&inboundDate=" + inboundDate;
                var obj = {};
                SendAjaxMethod("PUT", url, obj);
            });

            //点击删除按钮，删除所选的master order
            $("#table").on("click", ".btn-delete", function () {
                var masterOrderId = $(this).attr('grandnumber');

                url = "/api/fba/fbamasterorder/?grandNumber=" + masterOrderId;

                SendAjaxMethod("DELETE", url, {});
            });

            //点击文件按钮，打开订单相关文件管理页面
            $("#table").on("click", ".btn-file", function () {
                $(window.location).attr('href', "/EFolder/FBAEfolder/?reference=" + $(this).attr('reference') + "&orderType=MasterOrder");
            });

            //临时机关，点击invoice Status可以将状态临时改成Await开放状态
            $("#table").on("click", ".text-status", function () {
                $(this).html("Await");
            });

            //点击费用按钮，进入收费项目登记页面
            $("#table").on("click", ".btn-fee", function () {

                var tpStatus = $(this).parent().parent("tr").children('td').eq(15).children('text').html();

                //if ($(this).attr('invoicestatus') == "Closed")
                if (tpStatus == "Closed")
                    $(window.location).attr('href', '/fba/FBAinvoiceDetailReadOnly/?reference=' + $(this).attr('reference') + "&invoiceType=MasterOrder" + "&invoiceStatus=" + $(this).attr('invoicestatus'));
                else
                    $(window.location).attr('href', '/fba/FBAinvoiceDetail/?reference=' + $(this).attr('reference') + "&invoiceType=MasterOrder" + "&invoiceStatus=" + $(this).attr('invoicestatus'));
            });

            //点击编辑按钮，进入主单编辑页面
            $("#table").on("click", ".btn-edit", function () {
                $("#btn-new").hide();
                $("#btn-update").show();
                $("#h2-title").html("Update master order");
                grandNumber = $(this).attr('iid');
                grandChannel.openiframe(index, ".iframe", "750px", "550px");

                url = "/api/fba/fbamasterorder/?grandNumber=" + grandNumber + "&operation=Edit";

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        beforeSendingIndex = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(beforeSendingIndex);

                        $("#input-carrier").val(data.carrier);
                        $("#input-vessel").val(data.vessel);
                        $("#input-voy").val(data.voy);
                        $("#input-eta").val(data.eta);
                        $("#input-etd").val(data.etd);
                        $("#input-inboundtype").val(data.inboundType);
                        $("#input-etaPort").val(data.etaPort);
                        $("#input-receipt").val(data.placeOfReceipt);
                        $("#input-pol").val(data.portOfLoading);
                        $("#input-pod").val(data.portOfDischarge);
                        $("#input-delivery").val(data.placeOfDelivery);
                        $("#input-container").val(data.container);
                        $("#input-seal").val(data.sealNumber);
                        $("#input-size").val(data.containerSize);
                        $("#input-originalplts").val(data.originalPlts);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击更新按钮，更新主单的所有信息
            $("#btn-update").on("click", function () {
                var carrier = $("#input-carrier").val().toString();
                var vessel = $("#input-vessel").val().toString();
                var voy = $("#input-voy").val().toString();
                var eta = $("#input-eta").val().toString();
                var etd = $("#input-etd").val().toString();
                var inboundType = $("#input-inboundtype").val().toString();
                var etaPort = $("#input-etaPort").val().toString();
                var placeOfReceipt = $("#input-receipt").val().toString();
                var portOfLoading = $("#input-pol").val().toString();
                var portOfDischarge = $("#input-pod").val().toString();
                var placeOfDelivery = $("#input-delivery").val().toString();
                var container = $("#input-container").val().toString();
                var sealNumber = $("#input-seal").val().toString();
                var containerSize = $("#input-size").val().toString();
                var originalPlts = $("#input-originalplts").val();

                var obj = {
                    "carrier": carrier,
                    "vessel": vessel,
                    "voy": voy,
                    "eta": eta,
                    "etd": etd,
                    "etaPort": etaPort,
                    "placeOfReceipt": placeOfReceipt,
                    "portOfLoading": portOfLoading,
                    "portOfDischarge": portOfDischarge,
                    "placeOfDelivery": placeOfDelivery,
                    "container": container,
                    "sealNumber": sealNumber,
                    "containerSize": containerSize,
                    "inboundType": inboundType,
                    "originalPlts": originalPlts
                };

                url = "/api/fba/fbamasterorder/?grandNumber=" + grandNumber;

                SendAjaxMethod("PUT", url, obj);
            });

            //点击push按钮，打开编辑unload order页面
            $("#table").on("click", ".btn-push", function () {
                var grandNumber = $(this).parent().parent("tr").children("td").eq(1).children("text").html();

                masterOrderId = $(this).attr('iid');
                customerCode = grandNumber.substring(0, grandNumber.length - 10);
                reference = $(this).parent().parent("tr").children("td").eq(4).children("text").html();
                pageId = ".iframe-wo-push";

                $(".h2-customercode").html("Customer Code: " + customerCode);
                grandChannel.openiframe(index, pageId, "1000px", "800px");

                GetWorkOrder(masterOrderId, pageId);
            });

            //点击WO页面中的添加新指令按钮，弹出填写指令弹窗
            $(".btn-detail-create").on("click", function () {
                $("#cb-charge").show();

                $("#input-detail-description").val("");
                $("#btn-detail-update").hide();
                $("#btn-detail-add").show();
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });
            });

            //点击添加按钮，添加操作指示
            $("#btn-detail-add").on("click", function () {
                var description = $("#input-detail-description").val();
                var isChargingItem = $("#cb-charge").prop("checked");

                if (description != "") {
                    layer.close(index);
                    url = "/api/FBAInvoiceDetail/?reference=" + reference + "&invoiceType=MasterOrder&description=" + encodeURIComponent(description) + "&isChargingItem=" + isChargingItem;
                    SendAjaxMethodAndRefreshWorkOrder("POST", url, {});
                }
            });

            //点击操作指示表中的更新按钮，打开更新界面
            $(".table-wo").on("click", ".btn-detail-update", function () {
                $("#cb-charge").show();
                chargingDetailId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId;
                var pIndex;
                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        pIndex = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(pIndex);
                        $("#input-detail-description").val(data.description);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });

                $("#btn-detail-add").hide();
                $("#btn-detail-update").show();
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });

            });

            //点击更新按钮，更新操作指示
            $("#btn-detail-update").on("click", function () {
                var description = $("#input-detail-description").val();
                var isChargingItem = $("#cb-charge").prop("checked");

                if (description != "") {
                    layer.close(index);
                    url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId + "&comment=" + encodeURIComponent(description) + "&isChargingItem=" + isChargingItem + "&operation=UpdateInstruction";

                    SendAjaxMethodAndRefreshWorkOrder("PUT", url, {});
                }
            });

            //点击操作指示表中的更新结果按钮，打开更新结果界面
            $(".table-wo").on("click", ".btn-result", function () {
                chargingDetailId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId;
                var pIndex;
                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        pIndex = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(pIndex);
                        $("#input-detail-result").val(data.result);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });

                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail-result")
                });

            });

            //点击更新按钮，更新操作指示
            $("#btn-detail-result").on("click", function () {
                var description = $("#input-detail-result").val();

                if (description != "") {
                    layer.close(index);
                    url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId + "&comment=" + encodeURIComponent(description) + "&isChargingItem=true&operation=UpdateResult";
                    SendAjaxMethodAndRefreshWorkOrder("PUT", url, {});
                }
            });

            //点击操作指示表中的删除按钮，删除选中的操作指示
            $(".table-wo").on("click", ".btn-detail-delete", function () {
                var id = $(this).attr('iid');

                url = "/api/fba/fbainvoicedetail/?chargingItemDetailId=" + id;

                SendAjaxMethodAndRefreshWorkOrder("DELETE", url, {});
            });

            //点击确认发布按钮，将收货单状态改为New Order，unload order发布到仓库端
            $("#btn-push").on("click", function () {
                url = "/api/fbamasterorder/?masterOrderId=" + masterOrderId + "&operation=Push";
                grandChannel.sendAjaxMethod("PUT", url, {}, index);
            });

            function GetAjaxTable(methodType, url) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        index = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        if (table) {
                            table.destroy();
                        }

                        table = $("#table").DataTable({
                            data: data,
                            destroy: true,
                            scrollX: true,
                            order: [[0, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: [
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "grandNumber",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "inboundType",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "containerSize",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "container",
                                    render: function (data) {
                                        container = data;
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "totalCBM",
                                    render: function (data) {
                                        return "<font color='green'>" + parseFloat(data.toFixed(2)) + "</font>";
                                    }
                                },
                                {
                                    data: "actualCBM",
                                    render: function (data) {
                                        return "<font color='green'>" + parseFloat(data.toFixed(2)) + "</font>";
                                    }
                                },
                                {
                                    data: "totalCtns",
                                    render: function (data) {
                                        return "<font color='red'>" + data + "</font>";
                                    }
                                },

                                {
                                    data: "actualCtns",
                                    render: function (data) {
                                        return "<font color='red'>" + data + "</font>";
                                    }
                                },
                                {
                                    data: "originalPlts",
                                    render: function (data) {
                                        return "<font color='blue'>" + data + "</font>";
                                    }
                                },
                                {
                                    data: "actualPlts",
                                    render: function (data) {
                                        return "<font color='blue'>" + data + "</font>";
                                    }
                                },
                                {
                                    data: "skuNumber",
                                    render: function (data) {
                                        return "<font color='orange'>" + data + "</font>";
                                    }
                                },
                                {
                                    data: "inboundDate",
                                    render: function (data) {
                                        if (data == "1900-01-01T00:00:00")
                                            return "<font color='red'>Unreceived</font>"
                                        else
                                            return "<font>" + data.substring(0, 10) + "</font>";
                                    }
                                },
                                {
                                    data: "eta",
                                    render: function (data) {
                                        return "<font>" + data + "</font>";
                                    }
                                },
                                {
                                    data: "totalAmount",
                                    render: function (data) {
                                        return "<font>$" + data + "</font>";
                                    }
                                },
                                {
                                    data: "invoiceStatus",
                                    render: function (data) {
                                        invoiceStatuts = data;
                                        return "<text class='text-status'>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "closeDate",
                                    render: function (data) {
                                        if (data == "1900-01-01T00:00:00")
                                            return "<font color='red'>Open</font>"
                                        else
                                            return "<font>" + data.substring(0, 10) + "</font>";
                                    }
                                },
                                {
                                    data: "confirmedBy",
                                    render: function (data) {
                                        if (data == null)
                                            return "";
                                        else
                                            return "<font>" + data + "</font>";
                                    }
                                },
                                {
                                    data: "container",
                                    render: function (data) {
                                        return "<button class='btn btn-link btn-file' reference='" + data + "'>Files</button>";
                                    }
                                },
                                {
                                    data: "grandNumber",
                                    render: function (data) {
                                        //return "<button reference='" + container + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatuts + "' class='btn btn-link btn-fee'>Fee</button><button iid='" + data + "' class='btn btn-link btn-manage'>Manage</button><button class='btn btn-link btn-delete' grandnumber='" + data + "'>Delete</button>";
                                        return "<button reference='" + container + "' iid='" + data + "' customerid='" + customerId + "' invoicestatus='" + invoiceStatuts + "' class='btn btn-link btn-fee'>Fee</button><button iid='" + data + "' class='btn btn-link btn-edit'>Edit</button><button iid='" + data + "' class='btn btn-link btn-manage'>Manage</button>";
                                    }
                                },
                                {
                                    data: "status",
                                    render: function (data) {
                                        status = data;
                                        if (data == "New Created")
                                            return "<font color='gray'>" + data + "</font>"
                                        if (data == "Incoming")
                                            return "<font color='orange'>" + data + "</font>"
                                        else if (data == "Processing" || data == "Pending")
                                            return "<font color='red'>" + data + "</font>";
                                        else if (data == "Received")
                                            return "<font color='green'>" + data + "</font>";
                                        else if (data == "Allocated")
                                            return "<font color='brown'>" + data + "</font>";
                                        else if (data == "Completed")
                                            return "<font color='blue'>" + data + "</font>";
                                        else
                                            return "<font>" + data + "</font>";
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        if (status == "New Created")
                                            return "<input type='button' class='btn btn-link btn-push' iid='" + data + "' value='Push' />";
                                        else if (status == "Processing")
                                            return " ";
                                        else
                                            return "";
                                    }
                                },
                                {
                                    data: "instruction",
                                    render: function (data) {
                                        if (data == null)
                                            return "";
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "pushTime",
                                    render: function (data) {
                                        if (data == "1900-01-01T00:00:00")
                                            return "<font color='red'></font>"
                                        return "<text>" + data.substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "unloadFinishTime",
                                    render: function (data) {
                                        if (data == "1900-01-01T00:00:00")
                                            return "<font color='red'></font>"
                                        return "<text>" + data.substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "availableTime",
                                    render: function (data) {
                                        if (data == "1900-01-01T00:00:00")
                                            return "<font color='red'></font>"
                                        return "<text>" + data.substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "outTime",
                                    render: function (data) {
                                        if (data == "1900-01-01T00:00:00")
                                            return "<font color='red'></font>"
                                        return "<text>" + data.substring(0, 10) + "</text>";
                                    }
                                },
                                {
                                    data: "updateLog",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                }
                            ]
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function SendAjaxMethod(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(obj),
                    beforeSend: function () {
                        index = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.alert("Success!", function () {
                            window.location.reload();
                        })
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function transDate(date) {
                if (date != null)
                    return date.substring(0, 4) == "1900" ? " " : date.substring(0, 10);
                else
                    return "";
            }

            function transFormatDate(date) {
                if (date != null)
                    return date.substring(0, 4) == "1900" ? " " : date;
                else
                    return "";
            }

            function GetWorkOrder(masterOrderId, pageId) {

                url = "/api/fba/fbamasterorder/?masterOrderId=" + masterOrderId + "&operation=WO";

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $(".text-place").html(transDate(data.placeTime));
                        $(".text-finish").html(transDate(data.unloadFinishTime));
                        $(".text-eta").html(transDate(data.eta));
                        $(".text-inbound").html(transDate(data.inboundDate));
                        $(".text-out").html(transDate(data.outTime));
                        $(".text-damage").html(data.isDamaged);
                        $(".text-container").html(data.container);
                        $(".text-grandnumber").html(data.grandNumber);
                        $(".text-start").html(transDate(data.unloadStartTime));
                        $(".text-logon").html(data.logonProgress.toFixed(2) + "%");
                        $(".text-verified").html(data.verifiedBy);
                        $(".text-register").html(data.registerProgress.toFixed(2) + "%");
                        $(".text-dock").html(data.dock);
                        $(".text-allocation").html(data.allocationProgress.toFixed(2) + "%");

                        var plColumnArray = [
                            {
                                data: "id",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "shipmentId",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "amzRefId",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "warehouseCode",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "grossWeight",
                                render: function (data) {
                                    if (data != 0)
                                        return "<text>" + data + "</text>";
                                    else
                                        return "";
                                }
                            },
                            {
                                data: "cbm",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "quantity",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            }
                        ];
                        $(".table-packinglist").DataTable({
                            data: data.packingList,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "asc"]],
                            scrollCollapse: true,
                            scrollY: "200px",
                            iDisplayLength: 100,
                            columns: plColumnArray
                        });

                        var osColumnArray = [
                            {
                                data: "id",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "description",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "comment",
                                render: function (data) {
                                    if (data == null)
                                        return "";
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "result",
                                render: function (data) {
                                    if (data == null)
                                        return "";
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "status",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "handlingStatus",
                                render: function (data) {
                                    if (data == "New")
                                        return "<font color='blue'>" + data + "</font>";
                                    else if (data == "Pending")
                                        return "<font color='red'>" + data + "</font>";
                                    else if (data == "Updated")
                                        return "<font color='Orange'>" + data + "</font>";
                                    else if (data == "Finished")
                                        return "<font color='green'>" + data + "</font>";
                                    else
                                        return "<font>" + data + "</font>"
                                }
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    if (pageId == ".iframe-wo-view")
                                        return "";
                                    return "<button iid='" + data + "' class='btn btn-link btn-detail-update'>Update</button><button iid='" + data + "'class='btn btn-result btn-link'>Result</button><button iid='" + data + "' class='btn btn-link btn-detail-delete'>Delete</button>";
                                }
                            }
                        ];
                        table = $(".table-wo").DataTable({
                            data: data.operationInstructions,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: osColumnArray
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            }

            function validform(formId) {
                return $(formId).validate({
                    errorPlacement: function (error, element) {
                        var p = $("<p />").append(error);
                        p.appendTo(element.parent());
                    },
                    rules: {
                        eta: {
                            required: true
                        },
                        container: {
                            required: true
                        },
                        plts: {
                            required: true
                        },
                        type: {
                            required: true
                        },
                    },
                    messages: {
                        eta: {
                            required: "ETA is required",
                        },
                        container: {
                            required: "Container # is required",
                        },
                        plts: {
                            required: "Pallet number is required",
                        },
                        type: {
                            required: "Inbound type is required",
                        },
                    }
                });
            };

            function SendAjaxMethodAndRefreshWorkOrder(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: obj,
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function () {
                        layer.close(index);
                        GetWorkOrder(masterOrderId, customerCode, pageId);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });
    </script>
}