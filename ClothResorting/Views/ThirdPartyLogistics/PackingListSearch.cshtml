
@{
    ViewBag.Title = "PackingListSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Third-party Logistics Distribution System</h1>
<h2>PackingListSearch</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div id="div-search">
        <input style="width:140px" id="input-container" class="input-sm" placeholder="Container" />
        <input style="width:140px" id="input-po" class="input-sm" placeholder="Cut PO" />
        <input style="width:140px" id="input-style" class="input-sm" placeholder="Style" />
        <input style="width:140px" id="input-color" class="input-sm" placeholder="Color" />
        <input style="width:140px" id="input-customer" class="input-sm" placeholder="Customer" />
        <input style="width:140px" id="input-size" class="input-sm" placeholder="Size or Size Combo" />
        <button id="btn-search" class="btn btn-info">Search</button>
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Created By</th>
                    <th>Received By</th>
                    <th>Range</th>
                    <th>Customer</th>
                    <th>PO</th>
                    <th>Style</th>
                    <th>Color</th>
                    <th>Size Code</th>
                    <th>Pcs Code</th>
                    <th>Pack</th>
                    <th>Qty</th>
                    <th>Received Pcs</th>
                    <th>Ctns</th>
                    <th>Received Ctns</th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <th colspan="10" style="text-align:right">Total:</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {

            var table;
            var downloader;

            $("#btn-search").on('click', function () {
                var container = $("#input-container").val() == "" ? "NULL" : $("#input-container").val();
                var po = $("#input-po").val() == "" ? "NULL" : $("#input-po").val().toString();
                var style = $("#input-style").val() == "" ? "NULL" : $("#input-style").val().toString();
                var color = $("#input-color").val() == "" ? "NULL" : $("#input-color").val().toString();
                var customer = $("#input-customer").val() == "" ? "NULL" : $("#input-customer").val().toString();
                var size = $("#input-size").val() == "" ? "NULL" : $("#input-size").val().toString();

                var url = "/api/searchresult/?container=" + container + "&po=" + po + "&style=" + style + "&color=" + color + "&customer=" + customer + "&size=" + size;

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    success: function (data) {

                        if (table) {
                            table.destroy();
                        }

                        table = $("#table").DataTable({
                            destroy: true,
                            data: data,
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: [
                                {
                                    data: "operator",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "receiver",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "cartonRange",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "customer",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "purchaseOrder",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "style",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "color",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "sizeBundle",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "pcsBundle",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "pcsPerCarton",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "quantity",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "actualPcs",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "cartons",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "actualCtns",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                }
                            ],
                            footerCallback: function (row, data, start, end, display) {

                                var api = this.api(), data;

                                var intVal = function (i) {
                                    return typeof i === 'string' ?
                                        i.replace(/[\$,]/g, '') * 1 :
                                        typeof i === 'number' ?
                                        i : 0;
                                };

                                var quantity = api
                                    .column(10)
                                    .data()
                                    .reduce(function (a, b) {
                                        return intVal(a) + intVal(b);
                                    }, 0);

                                var totalActualPcs = api
                                    .column(11)
                                    .data()
                                    .reduce(function (a, b) {
                                        return intVal(a) + intVal(b);
                                    }, 0);

                                var cartons = api
                                    .column(12)
                                    .data()
                                    .reduce(function (a, b) {
                                        return intVal(a) + intVal(b);
                                    }, 0);

                                var totalActualCartons = api
                                    .column(13)
                                    .data()
                                    .reduce(function (a, b) {
                                        return intVal(a) + intVal(b);
                                    }, 0);

                                $(api.column(10).footer()).html("<font color='orange'>" + quantity + "</font>");
                                $(api.column(11).footer()).html("<font color='green'>" + totalActualPcs + "</font>");
                                $(api.column(12).footer()).html("<font color='red'>" + cartons + "</font>");
                                $(api.column(13).footer()).html("<font color='blue'>" + totalActualCartons + "</font>");
                            }
                        });

                        //动态添加一个导出结果按钮
                        if (downloader == null)
                            downloader = $("#div-search").append("<button id='btn-download' class='btn btn-primary'>Export Result based on searching conditions</button>");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            location.reload();
                        });
                    }
                });
            });

            //点击导出结果按钮，导出结果
            $("#div-search").on("click", "#btn-download", function () {
                var container = $("#input-container").val() == "" ? "NULL" : $("#input-container").val();
                var po = $("#input-po").val() == "" ? "NULL" : $("#input-po").val().toString();
                var style = $("#input-style").val() == "" ? "NULL" : $("#input-style").val().toString();
                var color = $("#input-color").val() == "" ? "NULL" : $("#input-color").val().toString();
                var customer = $("#input-customer").val() == "" ? "NULL" : $("#input-customer").val().toString();
                var size = $("#input-size").val() == "" ? "NULL" : $("#input-size").val().toString();

                var url = "/api/searchresultdownload/?container=" + container + "&po=" + po + "&style=" + style + "&color=" + color + "&customer=" + customer + "&size=" + size;

                $(window.location).attr('href', url);
            });

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });
    </script>
}