
@{
    ViewBag.Title = "AdminIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Third-party Logistics Distribution System</h1>
<h2>Work Order Overview</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div>
        <input id="btn-create" type="button" class="btn btn-group" value="Creat An Empty Work Order" />
        <input id="freecountrymenu" type="button" class="btn btn-primary" value="Free Country Manu" />
        <input id="silkiconmenu" type="button" class="btn btn-info" value="Silk Icon Manu" />
        <input id="btn-fix" type="button" class="btn btn-danger" value="在线修正" />
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Vendor Name</th>
                    <th>Work Order Type</th>
                    <th>Created Date</th>
                    <th>Created By</th>
                    <th style="width:95px">Container#</th>
                    <th>Fcs Ctns</th>
                    <th>Rcp Ctns</th>
                    <th>Fcs Pcs</th>
                    <th>Rcp Pcs</th>
                    <th>Operation</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<div class="iframe">
    <div>
        <input id="upload2" type="file" accept="xls/xlsx" />
    </div>
    <div>
        <input id="uploadfile" type="button" class="btn btn-default" value="Upload SILKICON" />
    </div>
    <div>
        <input id="uploadfc" type="button" class="btn btn-default" value="Upload FC" />
    </div>
</div>
<div class="iframe-ordertype">
    <div style="margin-top:10px;text-align:center">
        <text>Select work order type: </text>
        <select id="select-ordertype" style="width:170px;height:30px">
            <option value="Regular">Regular/Fulfillment</option>
            <option value="Replenishment">Replenishment</option>
            <option value="Mix">Mix</option>
        </select><br />
        <button id="create1"  style="margin-top:10px" class="btn btn-primary">Create</button>
    </div>
</div>
<div class="iframe-freecountry">
    <div style="margin-top:10px;text-align:center">
        <input type="button" class="btn btn-primary btn-shiporder" value="Manage ship order" /><br />
        <input id="btn-search" type="button" class="btn btn-primary" value="Search Free Country Inventory" style="margin-top:5px" />
        <input id="btn-pl" type="button" class="btn btn-primary" value="Search Free Country Packing List" style="margin-top:5px" />
    </div>
</div>
<div class="iframe-silkicon">
    <div style="margin-top:15px;text-align:center">
        <input type="button" class="btn btn-info btn-shiporder" value="Manage ship order" /><br />
        <a href="/thirdpartylogistics/generallocmanagement/">
            <input style="margin-top:5px" type="button" class="btn btn-info btn-managelocation" value="Manage general location" />
        </a>
        <a href="/ThirdPartyLogistics/PermanentLocManagement/">
            <input style="margin-top:5px" id="btn-location" type="button" class="btn btn-info" value="Manage Permanent Location" />
        </a>
        <a href="/ThirdPartyLogistics/PurchaseOrderManagement">
            <input style="margin-top:5px" id="btn-po" type="button" class="btn btn-info" value="Manage Purchase Order" />
        </a>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {

            var preId = JSON.stringify(window.location.search.substr(1));
            var index;
            var customer;
            var quantity;
            var workOrderType

            $(".iframe").hide();
            $(".iframe-ordertype").hide();
            $(".iframe-freecountry").hide();
            $(".iframe-silkicon").hide();

            $("#table").DataTable({
                ajax: {
                    url: "/api/Inventory",
                    dataSrc: ""
                },
                order: [[0, "desc"]],
                scrollY: "600px",
                scrollCollapse: true,
                iDisplayLength: 100,
                columns: [
                    {
                        data: "id",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "customerName",
                        render: function (data) {
                            customer = data;
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "workOrderType",
                        render: function (data) {

                            if (data == "Regular")
                            {
                                workOrderType = "Regular/Fulfillment";
                                return "<text>" + data + "/Fulfillment</text>";
                            }
                            else
                            {
                                workOrderType = data;
                                return "<text>" + data + "</text>";
                            }
                        }
                    },
                    {
                        data: "creatDate",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "operator",
                        render: function (data) {
                            return "<text>" + data + "</text>";
                        }
                    },
                    {
                        data: "containerNumber",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "totalCartons",
                        render: function (data) {
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualReceivedCtns",
                        render: function (data) {
                            return "<font color='blue'>" + data + "</font>";
                        }
                    },
                    {
                        data: "totalPcs",
                        render: function (data) {
                            quantity = data;
                            return "<font color='green'>" + data + "</font>";
                        }
                    },
                    {
                        data: "actualReceivedPcs",
                        render: function (data) {
                            return "<font color='blue'>" + data + "</font>";
                        }
                    },
                    {
                        data: "id",
                        render: function (data) {
                            if (customer == "SILK-ICON")
                                return "<a href='/ThirdPartyLogistics/SIPurchaseOrderOverview/?" + data + "'><button class='btn btn-info'>Manage</button></a><button id='" + data + "' class='btn btn-danger btn-delete'>Delete</button>";
                            else if (workOrderType == "Regular/Fulfillment")
                                return "<a href='/ThirdPartyLogistics/FCPurchaseOrderOverview/?preid=" + data + "'><button class='btn btn-info'>Manage</button></a><button id='" + data + "' class='btn btn-danger btn-delete'>Delete</button>";
                            else if (workOrderType == "Replenishment")
                                return "<a href='/ThirdPartyLogistics/SIPurchaseOrderOverview/?preid=" + data + "'><button class='btn btn-info'>Manage</button></a><button id='" + data + "' class='btn btn-danger btn-delete'>Delete</button>";
                            else
                                return "<a href='/ThirdPartyLogistics/MixPurchaseOrderOverview/?preid=" + data + "'><button class='btn btn-info'>Manage</button></a><button id='" + data + "' class='btn btn-danger btn-delete'>Delete</button>";
                        }
                    }
                ]
            });

            //在线修正按钮，本次将为所有workorder填Vendor的坑，以及为所有posummary、cartodetails填Order Type的坑
            $("#btn-fix").click(function () {
                $.ajax({
                    type: "PUT",
                    url: "/api/OnlineFix/",
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    success: function () {
                        alert("Success!");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            $("#btn-create").click(function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["20%", "10%"],
                    content: $(".iframe-ordertype")
                });
            })

            $("#create1").click(function () {
                var orderType = $("#select-ordertype option:selected").val();

                $.ajax({
                    type: "POST",
                    url: "/api/Index/?orderType=" + orderType,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    success: function () {
                        alert("New Pre-receive Order created success!");
                        window.location.reload();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            })

            $("#uploadfile").on("click", function () {
                var formData = new FormData();
                var files = $("#upload2").get(0).files;

                if (files.length > 0) {
                    formData.append("fileName", files[0]);
                }

                $.ajax({
                    contentType: false,
                    cache: false,
                    processData: false,
                    type: "POST",
                    url: "/api/ThirdPartyLogisticsApi",
                    data: formData,
                    beforeSend: function () {
                        layer.close(index);
                        layer.msg('Extracting files...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function () {
                        layer.alert("Extract successed!", function () {
                            location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
                $(".iframe").hide();
            });

            $("#uploadfc").on("click", function () {
                var formData = new FormData();
                var files = $("#upload2").get(0).files;

                if (files.length > 0) {
                    formData.append("fileName", files[0]);
                }

                $.ajax({
                    contentType: false,
                    cache: false,
                    processData: false,
                    type: "POST",
                    url: "/api/fcpurchaseorderoverview/",
                    data: formData,
                    beforeSend: function () {
                        layer.close(index);
                        layer.msg('Extracting files...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function () {
                        layer.alert("Extract successed!", function () {
                            location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
                $(".iframe").hide();
            });

            $("#btn-delete").on("click", function () {
                bootbox.confirm("Are you sure to delete ALL records? All the records will be deleted and this operation is not reversible.", function (result) {
                    if (result) {
                        $.ajax({
                            contentType: false,
                            cache: false,
                            processData: false,
                            type: "DELETE",
                            url: "/api/Inventory",
                            beforeSend: function () {
                                layer.msg('Deleting...', {
                                    icon: 1,
                                    shade: 0.01,
                                    time: 99 * 1000
                                });;
                            },
                            success: function () {
                                layer.alert("Delete successed!", function () {
                                    location.reload();
                                });
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                    window.location.reload();
                                });
                            }
                        });
                    }
                });
            });

            $("#table").on("click", ".btn-delete", function () {
                var button = $(this);
                var id = button.attr('id');
                var customer = button.parent().parent("tr").children('td').eq(1).children('text').html();
                var url;

                if (customer != "SILK-ICON")
                {
                    url = "/api/fcpurchaseOrderOverview/" + id;

                    bootbox.confirm("Are you sure to delete ALL records? All the records will be deleted and this operation is not reversible.", function (result) {
                        if (result) {
                            $.ajax({
                                contentType: false,
                                cache: false,
                                processData: false,
                                type: "DELETE",
                                url: url,
                                beforeSend: function () {
                                    layer.msg('Deleting...', {
                                        icon: 1,
                                        shade: 0.01,
                                        time: 99 * 1000
                                    });
                                },
                                success: function () {
                                    layer.alert("Delete successed!", function () {
                                        location.reload();
                                    });
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                        window.location.reload();
                                    });
                                }
                            });
                        }
                    });
                }
                else
                {
                    alert("This feature did not finish yet.");
                }
            });

            //打开FreeCountry菜单弹窗
            $("#freecountrymenu").on("click", function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["20%", "20%"],
                    content: $(".iframe-freecountry")
                });
            });

            //打开SilkIcon菜单弹窗
            $("#silkiconmenu").on("click", function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["20%", "20%"],
                    content: $(".iframe-silkicon")
                });
            });

            $("#btn-search").on("click", function () {
                $(window.location).attr('href', '/ThirdPartyLogistics/InventorySearch/');
            });

            $("#btn-pl").on("click", function () {
                $(window.location).attr('href', '/ThirdPartyLogistics/PackingListSearch/');
            });

            $(".btn-shiporder").on("click", function () {
                $(window.location).attr('href', '/ThirdPartyLogistics/shiporder/');
            });

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });

    </script>
}
