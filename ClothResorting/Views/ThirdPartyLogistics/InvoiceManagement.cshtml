
@{
    ViewBag.Title = "InvoiceManagement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Third-party Logistics Distribution System</h1>
<h2>Invoice Management</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div id="div-create">
        <text>Select Vendor: </text> <select id='select-vendor' style='width:170px;height:30px' required='required'></select>
        <button id="btn-chargingitem" class="btn btn-primary">Manage charging items</button>
        <button id="btn-create" class="btn btn-primary">Create a new invoice</button>
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped" style="table-layout:fixed;word-wrap:break-word;">
            <thead>
                <tr>
                    <th style="width:33px">Id</th>
                    <th>INVOICE#</th>
                    <th>PO</th>
                    <th>TYPE</th>
                    <th>ISSUE DATE</th>
                    <th>TOTAL DUE</th>
                    <th>DUE DATE</th>
                    <th>TERMS</th>
                    <th>ENCLOSED</th>
                    <th>SHIP DATE</th>
                    <th>SHIP VIA</th>
                    <th>CURRENCY</th>
                    <th style="width:180px">OPERATION</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="iframe">
    <div id="div-iframe" style="margin-top:20px;margin-right:20px;text-align:right">
        <text>INVOICE#: </text><input id='input-invoicenumber' style='width:170px' class='input-sm' placeholder='Invoice Number' /><br />
        <text>PO: </text><input id='input-po' style='width:170px' class='input-sm' placeholder='Purchase Order' /><br />
        <text>ISSUE DATE: </text><input id='input-invoicedate' type="date" style='width:170px'/><br />
        <text>DUE DATE: </text><input id='input-duedate' type="date" style='width:170px' /><br />
        <text>TERMS: </text><input id='input-terms' style='width:170px' class='input-sm' placeholder='Terms' /><br />
        <text>SHIP DATE: </text><input id='input-shipdate' type="date" style='width:170px' /><br />
        <text>ENCLOSED: </text><input id='input-enclosed' style='width:170px' class='input-sm' placeholder='Enclosed' /><br />
        <text>SHIP VIA: </text><input id='input-shipvia' style='width:170px' class='input-sm' placeholder='Ship Via' /><br />
        <text>BILL TO: </text><textarea id='input-billto' style='width:170px;height:75px'></textarea><br />
        <text>SHIP TO: </text><textarea id='input-shipto' style='width:170px;height:75px'></textarea><br />
        <text>CURRENCY: </text>
        <select id='select-currency' style='width:170px;height:30px' required='required'>
            <option value='USD'>USD</option>
            <option value='RMB'>RMB</option>
            <option value='EUR'>EUR</option>
        </select><br />
        <button style="margin-top:20px" id="btn-add" class='btn btn-primary'>New Invoice</button>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {

            var table;
            var vendor;
            $(".iframe").hide();

            //解析url中的参数函数
            function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };

            var departmentCode = getUrlParameter('departmentCode');

            //动态获取Vendor数据
            $.ajax({
                type: "GET",
                url: "/api/uppervendor/?departmentCode=" + departmentCode,
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $("#select-vendor").append("<option value='" + data[i] + "'>" + data[i] + "</option>");
                    }
                    //获取默认的vendor
                    vendor = data[0];

                    //显示默认vendor的invoice列表
                    $.ajax({
                        type: "GET",
                        url: "/api/invoicemanagement/?vendor=" + vendor + "&departmentCode=" + departmentCode,
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function (data) {

                            if (table) {
                                table.destroy();
                            }

                            table = $("#table").DataTable({
                                data: data,
                                order: [[0, "desc"]],
                                destroy: true,
                                scrollCollapse: true,
                                scrollY: "600px",
                                iDisplayLength: 100,
                                columns: [
                                    {
                                        data: "id",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "invoiceNumber",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "purchaseOrder",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "invoiceType",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "invoiceDate",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "totalDue",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "dueDate",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "terms",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "enclosed",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "shipDate",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "shipVia",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "currency",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "id",
                                        render: function (data) {
                                            return "<button iid='" + data + "' class='btn btn-link btn-view'>View</button><button iid='" + data + "' class='btn btn-link btn-edit'>Edit</button><button iid='" + data + "' class='btn btn-link btn-delete'>Delete</button>";
                                        }
                                    }
                                ]
                            });
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                window.location.reload();
                            });
                        }
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            //当下拉列表变化时，改变对应的vendor的invoice搜索结果
            $("#select-vendor").on("change", function () {

                vendor = $("#select-vendor option:selected").val();

                $.ajax({
                    type: "GET",
                    url: "/api/invoicemanagement/?vendor=" + vendor + "&departmentCode=" + departmentCode,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    success: function (data) {

                        if (table) {
                            table.destroy();
                        }

                        table = $("#table").DataTable({
                            data: data,
                            order: [[0, "desc"]],
                            destroy: true,
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: [
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "invoiceNumber",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "purchaseOrder",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "invoiceType",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "invoiceDate",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "totalDue",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "dueDate",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "terms",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "enclosed",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "shipDate",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "shipVia",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "currency",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<button iid='" + data + "' class='btn btn-link btn-view'>View</button><button iid='" + data + "' class='btn btn-link btn-edit'>Edit</button><button iid='" + data + "' class='btn btn-link btn-delete'>Delete</button>";
                                    }
                                }
                            ]
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });


            //点击创建新Invoice，打开新建弹窗
            $("#btn-create").click(function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["400px", "500px"],
                    content: $(".iframe")
                });
            })

            //点击new invoice按钮创建新invoice
            $("#div-iframe").on("click", "#btn-add", function () { 
                var invoiceNumber = $("#input-invoicenumber").val().toString();
                var po = $("#input-po").val().toString();
                var invoiceDate = $("#input-invoicedate").val().toString();
                var dueDate = $("#input-duedate").val().toString();
                var enclosed = $("#input-enclosed").val().toString();
                var shipDate = $("#input-shipdate").val().toString();
                var shipVia = $("#input-shipvia").val().toString();
                var billTo = $("#input-billto").val().toString();
                var shipTo = $("#input-shipto").val().toString();
                var terms = $("#input-terms").val();
                var currency = $("#select-currency option:selected").val();

                var obj = {
                    "vendor": vendor,
                    "departmentCode": departmentCode,
                    "invoiceNumber": invoiceNumber,
                    "purchaseOrder": po,
                    "invoiceDate": invoiceDate,
                    "dueDate": dueDate,
                    "enclosed": enclosed,
                    "shipDate": shipDate,
                    "shipVia": shipVia,
                    "billTo": billTo,
                    "shipTo": shipTo,
                    "currency": currency,
                    "terms": terms
                };

                $.ajax({
                    type: "POST",
                    url: "/api/invoicemanagement/",
                    data: JSON.stringify(obj),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function () {
                        layer.alert("Create success!", function () {
                            window.location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击Edit按钮，编辑所选invoice基础信息
            $("#table").on("click", ".btn-edit", function () {

                var invoiceNumber;
                var po;
                var invoiceDate;
                var dueDate;
                var terms;
                var enclosed;
                var shipDate;
                var shipVia;

                var invoiceId = $(this).attr('iid');

                $.ajax({
                    type: "GET",
                    url: "/api/invoicemanagement/?invoiceId=" + invoiceId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $("#input-invoicenumber").val(data.invoiceNumber);
                        $("#input-po").val(data.purchaseOrder);
                        $("#input-invoicedate").val(data.invoiceDate);
                        $("#input-duedate").val(data.dueDate);
                        $("#input-enclosed").val(data.enclosed);
                        $("#input-terms").val(data.terms);
                        $("#input-shipdate").val(data.shipDate)
                        $("#input-shipvia").val(data.shipVia);
                        $("#input-billto").html(data.billTo);
                        $("#input-shipto").html(data.shipTo);

                        //将新建按钮替换成保存按钮
                        $("#btn-add").replaceWith("<button iid='" + invoiceId + "' style='margin-top:20px' id='btn-save' class='btn btn-primary'>Save</button>");

                        //打开编辑弹窗
                        index = layer.open({
                            title: false,
                            type: 1,
                            shadeclose: true,
                            area: ["400px", "500px"],
                            content: $(".iframe")
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            $("#btn-save").replaceWith("<button style='margin-top:20px' id='btn-add' class='btn btn-primary'>New Invoice</button>");
                        });
                    }
                });
            });

            //点击保存按钮保存改动，成功后刷新页面
            $("#div-iframe").on("click", "#btn-save", function () {
                var id = $(this).attr('iid');
                var invoiceNumber = $("#input-invoicenumber").val().toString();
                var po = $("#input-po").val().toString();
                var invoiceDate = $("#input-invoicedate").val().toString();
                var dueDate = $("#input-duedate").val().toString();
                var enclosed = $("#input-enclosed").val().toString();
                var shipDate = $("#input-shipdate").val().toString();
                var shipVia = $("#input-shipvia").val().toString();
                var billTo = $("#input-billto").val().toString();
                var shipTo = $("#input-shipto").val().toString();
                var terms = $("#input-terms").val();
                var currency = $("#select-currency option:selected").val();

                var obj = {
                    "vendor": vendor,
                    "departmentCode": departmentCode,
                    "invoiceNumber": invoiceNumber,
                    "purchaseOrder": po,
                    "invoiceDate": invoiceDate,
                    "dueDate": dueDate,
                    "enclosed": enclosed,
                    "shipDate": shipDate,
                    "shipVia": shipVia,
                    "billTo": billTo,
                    "shipTo": shipTo,
                    "currency": currency,
                    "terms": terms
                };

                $.ajax({
                    type: "PUT",
                    url: "/api/invoicemanagement/" + id,
                    data: JSON.stringify(obj),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function () {
                        layer.alert("Save success!", function () {
                            window.location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert("Error!" + XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            $("#btn-chargingitem").on("click", function () {
                $(window.location).attr('href', '/ThirdPartyLogistics/ChargingItemManagement/?departmentCode=' + departmentCode);
            });

            $(".btn-back").on("click", function () {
                //window.history.back(-1);
                window.location.replace("/ThirdPartyLogistics/index");
            });
        });
    </script>
}
