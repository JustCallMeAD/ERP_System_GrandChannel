
@{
    ViewBag.Title = "FCRegularLocationAllocating";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Third-party Logistics Distribution System</h1>
<h2>Regular Order Put Away Page</h2>
<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th>Container</th>
                    <th>Ctn Range</th>
                    <th>PO</th>
                    <th>Style</th>
                    <th>Color</th>
                    <th>CC</th>
                    <th>Size Bundle</th>
                    <th>Pcs Bundle</th>
                    <th>Status</th>
                    <th>TBA Ctns</th>
                    <th><input id="select-all" type="checkbox" value="12345" /></th>
                    <th>Cartons</th>
                    <th>Location</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div>
        <input id="input-batchlocation" type="text" class="input-lg" placeholder="Location" /> <button id="btn-batchupdate" class="btn btn-info">Batch Update</button>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {

            var table;
            var lastCartonValue = 0;
            var lastLocation = "";
            var cartons;
            var lastSearchBar;

            var lastCartonRange = "last";
            var currentCartonRange = "current";
            var lastPO = "last";
            var currentPO = "current";
            var lastStyle = "last";
            var currentStyle = "current";
            var lastColor = "last";
            var currentColor = "current";

            //解析url中的参数函数
            function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };

            //从地址栏获取参数
            var preid = getUrlParameter('preid');

            $.ajax({
                type: "GET",
                url: "/api/FCRegularLocationAllocating/" + preid,
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {

                    if (table)
                    {
                        table.destroy();
                    }

                    table = $("#table").DataTable({
                        data: data,
                        destroy: true,
                        //scrollX: true,
                        scrollCollapse: true,
                        scrollY: "600px",
                        iDisplayLength: 100,
                        columns: [
                            {
                                data: "container",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "cartonRange",
                                render: function (data) {
                                    if (data != lastCartonRange)
                                    {
                                        lastCartonRange = data;
                                    }
                                    else
                                    {
                                        currentCartonRange = data;
                                    }
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "purchaseOrder",
                                render: function (data) {

                                    if (data != lastPO)
                                        lastPO = data;
                                    else
                                        currentPO = data;

                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "style",
                                render: function (data) {

                                    if (data != lastStyle)
                                        lastStyle = data;
                                    else
                                        currentStyle = data;

                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "color",
                                render: function (data) {

                                    if (data != lastColor)
                                        lastColor = data;
                                    else
                                        currentColor = data;

                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "customer",
                                render: function (data) {
                                    return "<font>" + data + "</font>";
                                }
                            },
                            {
                                data: "sizeBundle",
                                render: function (data) {
                                    return "<font>" + data + "</font>";
                                }
                            },
                            {
                                data: "pcsBundle",
                                render: function (data) {
                                    return "<font>" + data + "</font>";
                                }
                            },
                            {
                                data: "status",
                                render: function (data) {
                                    if (data == "To Be Allocated")
                                    {
                                        return "<font style='color:Red'>" + data + "</font>";
                                    }
                                    else
                                    {
                                        return "<font style='color:Orange'>" + data + "</font>";
                                    }
                                }
                            },
                            {
                                data: "toBeAllocatedCtns",
                                render: function (data) {
                                    cartons = data;
                                    if (cartons != 0)
                                    {
                                        return "<font color='blue'>" + data + "</font>";
                                    }
                                    else
                                    {
                                        return "";
                                    }
                                }
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    //if (currentCartonRange == lastCartonRange && currentPO == lastPO && currentStyle == lastStyle && currentColor == lastColor)
                                    if (currentCartonRange == lastCartonRange)
                                    {
                                        return "";
                                    }
                                    else
                                    {
                                        return "<input name='selected' type='checkbox' class='cb-selected' value='"
                                            + data + "' />";
                                    }
                                }
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    if (cartons != 0)
                                    {
                                        return "<input style='width:50px' id='ctns-" + data + "' type='number' value='" + lastCartonValue + "' />";
                                    }
                                    else
                                    {
                                        return "";
                                    }
                                }
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    if (cartons != 0)
                                    {
                                        return "<input style='width:50px' id='loc-" + data + "' value='" + lastLocation + "' /><button style='width:50px' class='btn btn-link btn-allocate' id='" + data + "'>OK</button>";
                                    }
                                    else
                                    {
                                        return "";
                                    }
                                }
                            }
                        ]
                    });

                },
                error: function () {
                    alert("An error occured!");
                }
            });

            // 获取将要打散入库的箱数、库位
            $("#table").on("click", ".btn-allocate", function () {
                var button = $(this);
                var id = button.attr("id");
                var cartons = $("#ctns-" + id.toString()).val();
                var locator = $("#loc-" + id.toString()).val();
                tbaCtns = button.parent().parent("tr").children('td').eq(9).children('font').html();
                var container = button.parent().parent("tr").children('td').eq(1).children('text').html();

                lastCartonValue = cartons;
                lastLocation = locator;

                //alert(cartons);
                //alert(tbaCtns);

                if (cartons == "" || locator == "")
                {
                    alert("Cartons and Location cannot be empty.");
                }
                else if (parseInt(cartons) > parseInt(tbaCtns))
                {

                    alert("There is not enough cartons to be allocated!");
                }
                else if (cartons <= 0)
                {
                    alert("Cartons cannot be negative!");
                }
                else if (container == "null")
                {
                    alert("Container must be assigned first.");
                }
                else
                {
                    var obj = {
                        "preId": preid,
                        "id": id,
                        "cartons": cartons,
                        "location": locator
                    };

                    //获取搜索条的内容
                    lastSearchBar = $("#table_filter").children('label').children('input').val();

                    //将obj打包传入后端，根据包中内容分解已收货对象
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify(obj),
                        url: "/api/FCRegularLocationAllocating/",
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function (data) {

                            alert("Success!");

                            if (table)
                            {
                                table.destroy();
                            }

                            table = $("#table").DataTable({
                                data: data,
                                destroy: true,
                                //scrollX: true,
                                scrollCollapse: true,
                                scrollY: "600px",
                                iDisplayLength: 100,
                                columns: [
                                    {
                                        data: "container",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "cartonRange",
                                        render: function (data) {
                                            if (data != lastCartonRange) {
                                                lastCartonRange = data;
                                            }
                                            else {
                                                currentCartonRange = data;
                                            }
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "purchaseOrder",
                                        render: function (data) {

                                            if (data != lastPO)
                                                lastPO = data;
                                            else
                                                currentPO = data;

                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "style",
                                        render: function (data) {

                                            if (data != lastStyle)
                                                lastStyle = data;
                                            else
                                                currentStyle = data;

                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "color",
                                        render: function (data) {

                                            if (data != lastColor)
                                                lastColor = data;
                                            else
                                                currentColor = data;

                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "customer",
                                        render: function (data) {
                                            return "<font>" + data + "</font>";
                                        }
                                    },
                                    {
                                        data: "sizeBundle",
                                        render: function (data) {
                                            return "<font>" + data + "</font>";
                                        }
                                    },
                                    {
                                        data: "pcsBundle",
                                        render: function (data) {
                                            return "<font>" + data + "</font>";
                                        }
                                    },
                                    {
                                        data: "status",
                                        render: function (data) {
                                            if (data == "To Be Allocated") {
                                                return "<font style='color:Red'>" + data + "</font>";
                                            }
                                            else {
                                                return "<font style='color:Orange'>" + data + "</font>";
                                            }
                                        }
                                    },
                                    {
                                        data: "toBeAllocatedCtns",
                                        render: function (data) {
                                            cartons = data;
                                            if (cartons != 0) {
                                                return "<font color='blue'>" + data + "</font>";
                                            }
                                            else {
                                                return "";
                                            }
                                        }
                                    },
                                    {
                                        data: "id",
                                        render: function (data) {
                                            if (currentCartonRange == lastCartonRange && currentPO == lastPO && currentStyle == lastStyle && currentColor == lastColor) {
                                                return "";
                                            }
                                            else {
                                                return "<input name='selected' type='checkbox' class='cb-selected' value='"
                                                    + data + "' />";
                                            }
                                        }
                                    },
                                    {
                                        data: "id",
                                        render: function (data) {
                                            if (cartons != 0) {
                                                return "<input style='width:50px' id='ctns-" + data + "' type='number' value='" + lastCartonValue + "' />";
                                            }
                                            else {
                                                return "";
                                            }
                                        }
                                    },
                                    {
                                        data: "id",
                                        render: function (data) {
                                            if (cartons != 0) {
                                                //return "<input style='width:50px' id='loc-" + data + "' value='" + lastLocation + "' /><button style='width:50px' class='btn btn-link btn-allocate' id='" + data + "'>OK</button>";
                                                return "<input style='width:50px' id='loc-" + data + "' /><button style='width:50px' class='btn btn-link btn-allocate' id='" + data + "'>OK</button>";
                                            }
                                            else {
                                                return "";
                                            }
                                        }
                                    }
                                ]
                            });

                            //将之前的搜索信息继续保存到搜索条过滤器中
                            var searchBar = $("#table_filter").children('label').children('input');
                            searchBar.val(lastSearchBar);

                            table.search(lastSearchBar).draw();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            //alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            //    window.location.reload();
                            //});
                            alert(XMLHttpRequest.responseJSON.exceptionMessage);
                            window.location.reload();
                        }
                    });
                }
            });

            //勾选全选选项，则选择所有对象
            $("#select-all").on("click", function () {
                if ($("#select-all").is(":checked")) {
                    $(".cb-selected").prop("checked", true);
                }
                else {
                    $(".cb-selected").prop("checked", false);
                }
            });

            //批量指定库位按钮
            $("#btn-batchupdate").on("click", function () {
                var button = $(this);
                var arr = new Array();

                //如果没有集装箱号未指定，则不能分配库存
                var isAssigned = true;

                //将所有被选中的CheckBox的对象的id放到数组中
                $("input:checkbox[name='selected']:checked").each(function (i) {
                    var val = $(this).val();
                    arr.push(val);
                    if($(this).parent().parent("tr").children('td').eq(1).children('text').html() == "null")
                    {
                        isAssigned = false;
                    }
                });

                if (button.prev().val() == "" || arr == null)
                {
                    alert("Location cannot be empty");
                }
                else if (isAssigned == false)
                {
                    alert("Container must be assigned first.")
                }
                else
                {
                    //将数组和location封装进一个对象以供POST传出
                    var obj = {
                        "arr": arr,
                        "preId": preid,
                        "location": button.prev().val()
                    };

                    //获取搜索条的内容
                    lastSearchBar = $("#table_filter").children('label').children('input').val();

                    //将所有被选中的对象默认视为分配所有已有箱数(通常只有一两箱)，即入库箱数等于待分配箱数
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify(obj),
                        url: "/api/FCRegularLocationAllocatingBatch/",
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function (data) {

                            alert("Success!");

                            if (table) {
                                table.destroy();
                            }

                            table = $("#table").DataTable({
                                data: data,
                                destroy: true,
                                //scrollX: true,
                                scrollCollapse: true,
                                scrollY: "600px",
                                iDisplayLength: 100,
                                columns: [
                                    {
                                        data: "container",
                                        render: function (data) {
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "cartonRange",
                                        render: function (data) {
                                            if (data != lastCartonRange) {
                                                lastCartonRange = data;
                                            }
                                            else {
                                                currentCartonRange = data;
                                            }
                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "purchaseOrder",
                                        render: function (data) {

                                            if (data != lastPO)
                                                lastPO = data;
                                            else
                                                currentPO = data;

                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "style",
                                        render: function (data) {

                                            if (data != lastStyle)
                                                lastStyle = data;
                                            else
                                                currentStyle = data;

                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "color",
                                        render: function (data) {

                                            if (data != lastColor)
                                                lastColor = data;
                                            else
                                                currentColor = data;

                                            return "<text>" + data + "</text>";
                                        }
                                    },
                                    {
                                        data: "customer",
                                        render: function (data) {
                                            return "<font>" + data + "</font>";
                                        }
                                    },
                                    {
                                        data: "sizeBundle",
                                        render: function (data) {
                                            return "<font>" + data + "</font>";
                                        }
                                    },
                                    {
                                        data: "pcsBundle",
                                        render: function (data) {
                                            return "<font>" + data + "</font>";
                                        }
                                    },
                                    {
                                        data: "status",
                                        render: function (data) {
                                            if (data == "To Be Allocated") {
                                                return "<font style='color:Red'>" + data + "</font>";
                                            }
                                            else {
                                                return "<font style='color:Orange'>" + data + "</font>";
                                            }
                                        }
                                    },
                                    {
                                        data: "toBeAllocatedCtns",
                                        render: function (data) {
                                            cartons = data;
                                            if (cartons != 0) {
                                                return "<font color='blue'>" + data + "</font>";
                                            }
                                            else {
                                                return "";
                                            }
                                        }
                                    },
                                    {
                                        data: "id",
                                        render: function (data) {
                                            if (currentCartonRange == lastCartonRange && currentPO == lastPO && currentStyle == lastStyle && currentColor == lastColor) {
                                                return "";
                                            }
                                            else {
                                                return "<input name='selected' type='checkbox' class='cb-selected' value='"
                                                    + data + "' />";
                                            }
                                        }
                                    },
                                    {
                                        data: "id",
                                        render: function (data) {
                                            if (cartons != 0) {
                                                return "<input style='width:50px' id='ctns-" + data + "' type='number' value='" + lastCartonValue + "' />";
                                            }
                                            else {
                                                return "";
                                            }
                                        }
                                    },
                                    {
                                        data: "id",
                                        render: function (data) {
                                            if (cartons != 0) {
                                                return "<input style='width:50px' id='loc-" + data + "' value='" + lastLocation + "' /><button style='width:50px' class='btn btn-link btn-allocate' id='" + data + "'>OK</button>";
                                            }
                                            else {
                                                return "";
                                            }
                                        }
                                    }
                                ]
                            });

                            //将之前的搜索信息继续保存到搜索条过滤器中
                            var searchBar = $("#table_filter").children('label').children('input');
                            searchBar.val(lastSearchBar);

                            table.search(lastSearchBar).draw();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            //alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            //    window.location.reload();
                            //});
                            alert(XMLHttpRequest.responseJSON.exceptionMessage);
                            window.location.reload();
                        }
                    });
                }
            });

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });
    </script>
}
