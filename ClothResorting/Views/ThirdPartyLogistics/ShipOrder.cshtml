
@{
    ViewBag.Title = "ShipOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Third-party Logistics Distribution System</h1>
<h2>Pull Sheet/Load Plan Page</h2>

<div class="maincontainer">
    <div>
        <input type="button" class="btn btn-default btn-back" value="<< Back" />
    </div>
    <div id="div-create">
        <button id="btn-create" class="btn btn-primary">Created a new ship order</button>
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped" style="table-layout:fixed;word-wrap:break-word;">
            <thead>
                <tr>
                    <th style="width:39px">Id</th>
                    <th @*style="width:49px"*@>PO</th>
                    <th style="width:79px">Vendor</th>
                    <th style="width:79px">Order Type</th>
                    <th style="width:79px">Customer</th>
                    <th style="width:63px">Dpt.</th>
                    <th @*style="width:254px"*@>Address</th>
                    <th style="width:141px">Pick tickets range</th>
                    <th style="width:83px">Create date</th>
                    <th style="width:73px">Create By</th>
                    <th style="width:63px">Pick date</th>
                    <th style="width:63px">Pick man</th>
                    <th style="width:83px">Status</th>
                    <th style="width:83px">Shipped By</th>
                    <th>Operation</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="iframe">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Purchase Order: </text><input id='input-po' style='width:170px' class='input-sm' placeholder='Purchase order' /><br />
        <text>Select Vendor: </text><select id='select-vendor' class='select-vendor' style='width:170px;height:30px' required='required'></select><br />
        <text>Select Order Type: </text><select id='select-ordertype' style='width:170px;height:30px' required='required'>
            <option value='Regular'>Regular</option>
            <option value='Replenishment'>Replenishment</option>
        </select><br />
        <text>Customer: </text><input id='input-customer' style='width:170px' class='input-sm' placeholder='Customer' /><br />
        <text>Address: </text><input id='input-address' style='width:270px' class='input-sm' placeholder='Address' /><br />
        <text>Pick Tickets Range: </text><input id='input-range' style='width:170px' class='input-sm' placeholder='Pick tickets range' /><br />
        <button id="btn-add" class='btn btn-primary'>New ship order</button>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {

            var status;
            var orderType;
            var index;
            var vendor;
            $(".iframe").hide();

            //解析url中的参数函数
            function getUrlParameter(sParam) {
                var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : sParameterName[1];
                    }
                }
            };

            var departmentCode = getUrlParameter('departmentCode');

            //动态获取Vendor数据
            $.ajax({
                type: "GET",
                url: "/api/uppervendor/?departmentCode=" + departmentCode,
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $("#select-vendor").append("<option value='" + data[i] + "'>" + data[i] + "</option>");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            $.ajax({
                type: "GET",
                url: "/api/shiporder/?departmentCode=" + departmentCode,
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    $("#table").DataTable({
                        data: data,
                        order: [[0, "desc"]],
                        destroy: true,
                        //scrollX: true,
                        scrollCollapse: true,
                        scrollY: "600px",
                        iDisplayLength: 100,
                        columns: [
                            {
                                data: "id",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "orderPurchaseOrder",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "vendor",
                                render: function (data) {
                                    vendor = data;
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "orderType",
                                render: function (data) {
                                    orderType = data;
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "customer",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "departmentCode",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "address",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "pickTicketsRange",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "createDate",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "operator",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "pickDate",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "pickingMan",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "status",
                                render: function (data) {
                                    status = data;

                                    if (data == "New Created") {
                                        return "<text style='color:Orange'>" + data + "</text>";
                                    }
                                    else if (data == "Picking") {
                                        return "<text style='color:Red'>" + data + "</text>";
                                    }
                                    else if (data == "Ready") {
                                        return "<text style='color:Green'>" + data + "</text>";
                                    }
                                    else {
                                        return "<text style='color:blue'>" + data + "</text>";
                                    }
                                }
                            },
                            {
                                data: "shippingMan",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    if (orderType == "Regular") {
                                        if (status == "Shipped") {
                                            return "<button value='" + data + "'class='btn btn-link btn-diag'>Diagnostic</button><button class='btn btn-link btn-download' value='" + data + "' >Download</button><button value='" + data + "'class='btn btn-link btn-summary'>Summary</button>";
                                        }
                                        else if (status == "Picking" || status == "Ready") {
                                            return "<button id='" + data + "'class='btn btn-link btn-regularpick'>Pick</button><button value='" + data + "'class='btn btn-link btn-diag'>Diagnostic</button><button class='btn btn-link btn-cancel' value='" + data + "'>Cancel</button><button class='btn btn-link btn-download' value='" + data + "' >Download</button><button value='" + data + "'class='btn btn-link btn-summary'>Summary</button><button class='btn btn-link btn-ready' value='" + data + "'>Ready</button><button class='btn btn-link btn-ship' value='" + data + "'>Ship</button>"
                                        }
                                        else {
                                            return "<button id='" + data + "'class='btn btn-link btn-regularpick'>Pick</button><button value='" + data + "'class='btn btn-link btn-diag'>Diagnostic</button><button class='btn btn-link btn-cancel' value='" + data + "'>Cancel</button>"
                                        }
                                    }
                                    else{
                                        if (status == "Shipped") {
                                            return "<button value='" + data + "'class='btn btn-link btn-diag'>Diagnostic</button><button class='btn btn-link btn-download' value='" + data + "' >Download</button><button value='" + data + "'class='btn btn-link btn-summary'>Summary</button>";
                                        }
                                        else if (status == "Picking" || status == "Ready") {
                                            return "<button id='" + data + "'class='btn btn-link btn-replenishmentpick'>Pick</button><button value='" + data + "'class='btn btn-link btn-diag'>Diagnostic</button><button class='btn btn-link btn-cancel' value='" + data + "'>Cancel</button><button class='btn btn-link btn-download' value='" + data + "' >Download</button><button value='" + data + "'class='btn btn-link btn-summary'>Summary</button><button class='btn btn-link btn-ready' value='" + data + "'>Ready</button><button class='btn btn-link btn-ship' value='" + data + "'>Ship</button>"
                                        }
                                        else {
                                            return "<button id='" + data + "'class='btn btn-link btn-replenishmentpick'>Pick</button><button value='" + data + "'class='btn btn-link btn-diag'>Diagnostic</button><button class='btn btn-link btn-cancel' value='" + data + "'>Cancel</button>"
                                        }
                                    }
                                }
                            }
                        ]
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                        window.location.reload();
                    });
                }
            });

            //Regular类型订单的发货菜单
            $("#table").on("click", ".btn-regularpick", function () {
                var button = $(this);
                $(window.location).attr('href', '/thirdpartylogistics/pickdetail/?shipOrderId=' + button.attr('id') + "&orderType=Regular");
            });

            //Replenihment类型订单的发货菜单
            $("#table").on("click", ".btn-replenishmentpick", function () {
                var button = $(this);
                $(window.location).attr('href', '/thirdpartylogistics/pickreplenishmentorder/?shipOrderId=' + button.attr('id') + "&orderType=Replenishment");
            });

            //共有菜单
            //拣货单统计
            $("#table").on("click", ".btn-summary", function () {
                var button = $(this);
                $(window.location).attr('href', '/thirdpartylogistics/pickdetailsummary/?shipOrderId=' + button.attr('value'));
            });

            //拣货诊断
            $("#table").on("click", ".btn-diag", function () {
                var button = $(this);
                $(window.location).attr('href', '/thirdpartylogistics/pullsheetdiagnostics/?shipOrderId=' + button.attr('value'));
            });

            //点击准备按钮改变状态
            $("#table").on("click", ".btn-ready", function () {
                var button = $(this);
                var shipOrderId = button.attr('value');

                $.ajax({
                    type: "PUT",
                    url: "/api/shiporder/?onChangeShipOrderId=" + shipOrderId,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    success: function () {
                        bootbox.alert("Status has been changed.", function () {
                            window.location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            //点击ship发货
            $("#table").on("click", ".btn-ship", function () {

                var button = $(this);
                var shipOrderId = button.attr('value');
                alert(shipOrderId);

                bootbox.confirm("Are you want to ship this order? This operation is unreversed.", function (result) {
                    if (result) {

                        $.ajax({
                            type: "PUT",
                            url: "/api/shiporder/?shipOrderId=" + shipOrderId,
                            contentType: 'application/json; charset=utf-8',
                            dataType: "json",
                            beforeSend: function () {
                                index = layer.msg('Processing...', {
                                    icon: 1,
                                    shade: 0.01,
                                    time: 99 * 1000
                                });
                            },
                            success: function () {
                                layer.close(index);
                                layer.alert("Selected pull sheet has been shipped.", function () {
                                    window.location.reload();
                                });
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                    window.location.reload();
                                });
                            }
                        });
                    }
                });
            });

            //点击取消按钮，取消所选运单
            $("#table").on("click", ".btn-cancel", function () {
                var button = $(this);
                var id = button.attr('value');

                $.ajax({
                    type: "DELETE",
                    url: "/api/shiporder/?shipOrderId=" + id,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function () {
                        layer.close(index);
                        layer.alert("Selected pull sheet has been cancelled. All units and cartons have been went back to the original location and available now.", function () {
                            window.location.reload();
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            });

            $("#table").on("click", ".btn-download", function () {

                var button = $(this);
                var id = button.attr('value');

                $(window.location).attr('href', '/api/pullsheetpdf/' + id);
            });

            //点击创建新运单按钮，打开新建运单弹窗
            $("#btn-create").click(function () {
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["400px", "300px"],
                    content: $(".iframe")
                });
            })

            //在新建订单选择vendor时，选择free country将只有一种order type可选，先择silk icon将有两种
            $("#select-vendor").on("change", function () {
                if ($(this).val() == "Silk Icon") {
                    $("#select-ordertype").replaceWith("<select id='select-ordertype' style='width:170px;height:30px' required='required'><option value='Regular'>Regular</option><option value='Replenishment'>Replenishment</option></select>");
                }
                else
                {
                    $("#select-ordertype").replaceWith("<select id='select-ordertype' style='width:170px;height:30px' required='required'><option value='Regular'>Regular</option></select>");
                }
            });

            //点击添加按钮，新建一个新的运单
            $("#btn-add").on("click", function () {
                var range = $("#input-range").val();
                var po = $("#input-po").val();
                var customer = $("#input-customer").val();
                var address = $("#input-address").val();
                var vendor = $("#select-vendor option:selected").val();
                var orderType = $("#select-ordertype option:selected").val();

                if (range == "" || po == "" || customer == "" || address == "" || vendor == "") {
                    alert("All fields are required.");
                }
                else {
                    var obj = {
                        "orderPurchaseOrder": po.toString(),
                        "customer": customer.toString(),
                        "address": address.toString(),
                        "pickTicketsRange": range.toString(),
                        "vendor": vendor.toString(),
                        "orderType": orderType.toString(),
                        "departmentCode": departmentCode.toString()
                    }
                    $.ajax({
                        type: "POST",
                        url: "/api/shiporder/",
                        data: JSON.stringify(obj),
                        contentType: 'application/json; charset=utf-8',
                        dataType: "json",
                        success: function () {
                            alert("Success!");
                            window.location.reload();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            bootbox.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                                window.location.reload();
                            });
                        }
                    });
                }
            });

            $(".btn-back").on("click", function () {
                //window.history.back(-1);
                window.location.replace("/ThirdPartyLogistics/index");
            });
        });
    </script>
}
