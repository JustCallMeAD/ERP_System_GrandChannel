
@{
    ViewBag.Title = "InboundLog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Warehouse Client</h1>
<h2>Inbound Order Management</h2>

<div class="maincontainer">
    <div style="margin:20px">
        <input id="btn-outboundlog" type="button" class="btn btn-primary" value="View Outbound Log" />
    </div>
    <div style="margin:20px">
        <font size="5">Catagory: </font>
        <input name="all" type="button" class="btn btn-default btn-color" value="All" />
        <input name="incoming" style="background-color:orange;color:white" type="button" class="btn btn-default btn-color" value="Incoming Order" />
        <input name="arriced" style="background-color:darkcyan;color:white" type="button" class="btn btn-default btn-color" value="Arrived Order" />
        <input name="processing" style="background-color:red;color:white" type="button" class="btn btn-default btn-color" value="Processing Order" />
        <input name="received" style="background-color:green;color:white" type="button" class="btn btn-default btn-color" value="Received Order" />
        <input name="registered" style="background-color:purple;color:white" type="button" class="btn btn-default btn-color" value="Registered Order" />
        <input name="allocated" style="background-color:brown;color:white" type="button" class="btn btn-default btn-color" value="Allocated Order" />
        <input name="completed" style="background-color:darkblue;color:white" type="button" class="btn btn-default btn-color" value="Completed Order" />
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped" style="table-layout:fixed;word-wrap:break-word;">
            <thead>
                <tr>
                    <th>ORDER ID</th>
                    <th style="width:70px">STATUS</th>
                    <th style="width:150px">STATUS CONTROL</th>
                    <th style="width:200px">OPERATION</th>
                    <th>DPT</th>
                    <th>CUSTOMER</th>
                    <th>TYPE</th>
                    <th>ETA</th>
                    <th>ATA</th>
                    <th>DOCK#</th>
                    <th>CONTAINER #</th>
                    <th>ORG CTN</th>
                    <th>ORG SKU</th>
                    <th>ORG PLT</th>
                    <th>CARRIER</th>
                    <th>LUMPER SVC</th>
                    <th style="width:200px">INSTRUCTION</th>
                    <th style="width:80px">PUSH DATE</th>
                    <th style="width:80px">START TIME</th>
                    <th style="width:80px">FINISH TIME</th>
                    <th style="width:80px">EPT CNTR AVA TIME</th>
                    <th style="width:80px">EPT CNTR OUT TIME</th>
                    <th style="width:200px">OPLOG</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="iframe-fbadate">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Select Operation Date: </text><input type="datetime-local" id='input-operationdate' style='width:200px' class='input-sm' /><br />
        <button id="btn-confirm" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Confirm</button>
    </div>
</div>
<div class="iframe-detail">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Comment: </text><input id='input-detail-comment' style='width:400px' class='input-sm' /><br />
        <button id="btn-detail-add" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Add</button>
        <button id="btn-detail-update" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Update</button>
    </div>
</div>
@*<div class="iframe-update">
        <h2 id="h2-title" style="margin-left:20px"></h2>
        <form id="form-create">
            <div style="margin-top:20px;margin-left:30px;text-align:right;float:left">
                <text>Inbound Date: <input name="inbounddate" id='input-inbounddate' type="datetime-local" style='width:200px;margin-top:20px' class='input-sm' required /></text><br />
                <text>Unload Finish Time: <input name="finishtime" id='input-finishtime' type="datetime-local" style='width:200px;margin-top:20px' class='input-sm' required /></text><br />
                <text>Trailer Ava Time: <input name="availabletime" id='input-avatime' type="datetime-local" style='width:200px;margin-top:20px' class='input-sm' required /></text><br />
                <font color="red">*Date or time won't be saved without hours and minutes.</font>
            </div>
            <div style="margin-top:20px;margin-right:20px;text-align:right;float:right">
                <text>Ept Trailer Out Time: <input name="outtime" id='input-outtime' type="datetime-local" style='width:200px;margin-top:20px' class='input-sm' required /></text><br />
                <text>Dock Number: <input name="docknumber" id='input-docknumber' style='width:200px;margin-top:20px' class='input-sm' placeholder="Required when submitting" required /></text><br />
                <text>Verified By: <input name="verifiedby" id='input-verifiedby' style='width:200px;margin-top:20px' class='input-sm' placeholder="Required when submitting" required /></text><br />
                <button type="button" id="btn-update" class='btn btn-primary' style="margin-top:20px">Save&Update</button>
                <button type="button" id="btn-submitreport" class='btn btn-primary' style="margin-top:20px">Submit Report</button>
            </div>
        </form>
    </div>*@
@Html.Partial("~/Views/FBA/_FBAMasterOrderPartialView.cshtml", null)
@Html.Partial("~/Views/Shared/_readmePartial.cshtml", null)

@section scripts
{
    <script>
        $(document).ready(function () {

            var index;
            var table;
            var url;
            var operation;
            var pageId;
            var operation;
            var masterOrderId;
            var searchBar = grandChannel.getUrlParameter('search');

            $(".iframe-wo-warehouse, .iframe-wo-office").hide();
            $(".iframe-fbadate, .iframe-detail, .iframe-update").hide();
            $("#btn-update, #btn-report").hide();

            var columnsArray = [
                {
                    data: "id",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "status",
                    render: function (data) {
                        status = data;
                        if (data == "New Created")
                            return "<font color='gray'>" + data + "</font>"
                        if (data == "Incoming")
                            return "<font color='orange'>" + data + "</font>"
                        else if (data == "Arrived")
                            return "<font color='darkcyan'>" + data + "</font>";
                        else if (data == "Processing" || data == "Pending" || data == "Updated")
                            return "<font color='red'>" + data + "</font>";
                        else if (data == "Received")
                            return "<font color='green'>" + data + "</font>";
                        else if (data == "Registered")
                            return "<font color='purple'>" + data + "</font>";
                        else if (data == "Allocated")
                            return "<font color='brown'>" + data + "</font>";
                        else if (data == "Completed")
                            return "<font color='blue'>" + data + "</font>";
                        else
                            return "<font>" + data + "</font>";
                    }
                },
                {
                    data: "id",
                    render: function (data) {
                        if (status == "Incoming")
                            return "<input type='button' class='btn btn-link btn-receive' iid='" + data + "' value='Mark Received' />";
                        if (status == "Arrived")
                            return "<input type='button' class='btn btn-link btn-start' iid='" + data + "' value='Start Unloading' />";
                        else if (status == "Processing" || status == "Pending" || status == "Updated")
                            return "<input type='button' class='btn btn-link btn-wo-process' operation='process' iid='" + data + "' value='Process WO' />";
                        else if (status == "Received")
                            return "<input type='button' class='btn btn-link btn-registered' iid='" + data + "' value='Submit Register' />";
                        else if (status == "Registered")
                            return "<input type='button' class='btn btn-link btn-allocated' iid='" + data + "' value='Submit Allocation' />";
                        else if (status == "Allocated")
                            return "";
                        else if (status == "Completed")
                            return "";
                        else
                            return "";
                    }
                },
                {
                    data: "id",
                    render: function (data) {
                        if (status == "Incoming" || status == "Arrived")
                            return "<input type='button' class='btn btn-link btn-wo-view' operation='preview' iid='" + data + "' value='Preview WO' />";
                        else if (status == "Processing" || status == "Pending" || status == "Updated")
                            return "";
                        else if (status == "Received")
                            return "<input type='button' class='btn btn-link btn-wo-review' operation='review' iid='" + data + "' value='Review WO' /><input type='button' class='btn btn-link btn-registering' iid='" + data + "' value='Register Plt' />";
                        else if (status == "Registered")
                            return "<input type='button' class='btn btn-link btn-wo-review' operation='review' iid='" + data + "' value='Review WO' /><input type='button' class='btn btn-link btn-allocating' iid='" + data + "' value='Allocate Items' />";
                        else if (status == "Allocated")
                            return "<input type='button' class='btn btn-link btn-wo-review' operation='review' iid='" + data + "' value='Review WO' /><input type='button' class='btn btn-link btn-inventory' iid='" + data + "' value='Inventory' />";
                        else
                            return "<input type='button' class='btn btn-link btn-wo-review' operation='review' iid='" + data + "' value='Review WO' /><input type='button' class='btn btn-link btn-inventory' iid='" + data + "' value='Inventory' />";
                    }
                },
                {
                    data: "department",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "customer",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "inboundType",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "eta",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "inboundDate",
                    render: function (data) {
                        if (data.substring(0, 4) == "1900")
                            return "";
                        return "<text>" + data.substring(0, 10) + "</text>";
                    }
                },
                {
                    data: "dockNumber",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "container",
                    render: function (data) {
                        orderNumber = data;
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "ctns",
                    render: function (data) {
                        return "<font color='green'>" + data + "</font>";
                    }
                },
                {
                    data: "sku",
                    render: function (data) {
                        return "<font color='orange'>" + data + "</font>";
                    }
                },
                {
                    data: "originalPlts",
                    render: function (data) {
                        return "<font color='blue'>" + data + "</font>";
                    }
                },
                {
                    data: "carrier",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "lumper",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "instruction",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "pushTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>"
                        return "<text>" + data.substring(0, 10) + "</text>";
                    }
                },
                {
                    data: "unloadStartTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font></font>"
                        return "<text>" + data.substring(0, 10) + "</text>";
                    }
                },
                {
                    data: "unloadFinishTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font></font>"
                        return "<text>" + data.substring(0, 10) + "</text>";
                    }
                },
                {
                    data: "availableTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>"
                        return "<text>" + data.substring(0, 10) + "</text>";
                    }
                },
                {
                    data: "outTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>"
                        return "<text>" + data.substring(0, 10) + "</text>";
                    }
                },
                {
                    data: "updateLog",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                }
            ]
            url = "/api/WarehouseInboundLog/";
            getAjaxTable("GET", url, "#table", table, columnsArray, index, searchBar);

            //点击Preview WO按钮，打开浏览unload work order页面
            $("#table").on("click", ".btn-wo-view", function () {
                $(".btn-logon, #btn-detail-comment, #btn-wo-update, .iframe-wo-warehouse-update").hide();
                customerCode = $(this).parent().parent("tr").children("td").eq(5).children("text").html();
                masterOrderId = $(this).attr('iid');
                pageId = ".iframe-wo-warehouse";

                $(".h2-customercode").html("Customer Code: " + customerCode);
                grandChannel.openiframe(index, pageId, "1000px", "800px");

                operation = $(this).attr('operation');
                GetWorkOrder(masterOrderId, operation);
            });

            //点击Review WO按钮，打开检查Unload work order页面
            $("#table").on("click", ".btn-wo-review", function () {
                $(".btn-logon, #btn-detail-comment").hide();
                $("#btn-update, #btn-submitreport").hide();
                $(".iframe-wo-warehouse-update, #btn-update").show();
                customerCode = $(this).parent().parent("tr").children("td").eq(5).children("text").html();
                masterOrderId = $(this).attr('iid');
                pageId = ".iframe-wo-warehouse";

                url = "/api/warehouseinboundlog/?masterOrderId=" + masterOrderId;

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $("#input-inbounddate").val(transFormatDate(data.inboundDate));
                        $("#input-finishtime").val(transFormatDate(data.unloadFinishTime));
                        $("#input-avatime").val(transFormatDate(data.availableTime));
                        $("#input-outtime").val(transFormatDate(data.outTime));
                        $("#input-docknumber").val(data.dockNumber);
                        $("#input-verifiedby").val(data.verifiedBy);
                    }
                });

                $(".h2-customercode").html("Customer Code: " + customerCode);
                grandChannel.openiframe(index, pageId, "1000px", "800px");

                operation = $(this).attr('operation');
                GetWorkOrder(masterOrderId, operation);
            });

            //点击Process WO按钮，打开浏览unload work order页面
            $("#table").on("click", ".btn-wo-process", function () {
                $(".iframe-wo-warehouse-update, .btn-logon, #btn-detail-comment").show();
                $("#btn-update, #btn-submitreport").show();
                customerCode = $(this).parent().parent("tr").children("td").eq(5).children("text").html();
                masterOrderId = $(this).attr('iid');
                pageId = ".iframe-wo-warehouse";

                $(".h2-customercode").html("Customer Code: " + customerCode);
                grandChannel.openiframe(index, pageId, "1000px", "800px");

                url = "/api/warehouseinboundlog/?masterOrderId=" + masterOrderId;

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $("#input-inbounddate").val(transFormatDate(data.inboundDate));
                        $("#input-finishtime").val(transFormatDate(data.unloadFinishTime));
                        $("#input-avatime").val(transFormatDate(data.availableTime));
                        $("#input-outtime").val(transFormatDate(data.outTime));
                        $("#input-docknumber").val(data.dockNumber);
                        $("#input-verifiedby").val(data.verifiedBy);
                    }
                });

                operation = $(this).attr('operation');
                GetWorkOrder(masterOrderId, operation);
            });

            //点击标记到货按钮，填写到货日期
            $("#table").on("click", ".btn-receive", function () {
                var button = $(this);
                operation = "MarkInboundDate";
                masterOrderId = button.attr('iid');

                grandChannel.openiframe(index, ".iframe-fbadate", "400px", "150px");
            });

            //点击FBA订单的开始卸货按钮，打开填写日期弹窗
            $("#table").on("click", ".btn-start", function () {
                var button = $(this);
                operation = "Start";
                masterOrderId = button.attr('iid');

                grandChannel.openiframe(index, ".iframe-fbadate", "400px", "150px");
            });

            //点击弹出日期框的确认按钮，确认操作
            $("#btn-confirm").on("click", function () {
                layer.close(index);
                var operationDate = $("#input-operationdate").val();

                if (operationDate != "") {
                    url = "/api/warehouseinboundlog/?masterOrderId=" + masterOrderId + "&operationDate=" + operationDate + "&operation=" + operation;
                    grandChannel.sendAjaxMethod("PUT", url, {}, index);
                }
                else {
                    alert("Date cannot be empty.");
                }
            });

            //点击WO中的logon items按钮，跳转到录入收货页面
            $(".btn-logon").on("click", function () {
                $(window.location).attr('href', "/warehouse/FBAReceiving/?masterOrderId=" + masterOrderId);
            });

            //点击提交报告按钮，弹出填写报告日期弹窗
            $("#table").on("click", ".btn-report", function () {
                var button = $(this);
                operation = "Report";
                masterOrderId = button.attr('iid');
                $("#btn-update, #btn-report").show();
                $("#h2-title").html("Submit Unloading Report");

                url = "/api/warehouseinboundlog/?masterOrderId=" + masterOrderId;

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $("#input-inbounddate").val(transFormatDate(data.inboundDate));
                        $("#input-finishtime").val(transFormatDate(data.unloadFinishTime));
                        $("#input-avatime").val(transFormatDate(data.availableTime));
                        $("#input-outtime").val(transFormatDate(data.outTime));
                        $("#input-docknumber").val(data.dockNumber);
                        $("#input-verifiedby").val(data.verifiedBy);
                    }
                });

                grandChannel.openiframe(index, ".iframe-update", "800px", "350px");
            });

            //点击WO中Summary中的update按钮，也可以打开报告弹窗
            $("#btn-wo-update").on("click", function myfunction() {
                $("#btn-update, #btn-report").hide();
                $("#h2-title").html("Update Unloading Report");

                url = "/api/warehouseinboundlog/?masterOrderId=" + masterOrderId;

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $("#input-inbounddate").val(transFormatDate(data.inboundDate));
                        $("#input-finishtime").val(transFormatDate(data.unloadFinishTime));
                        $("#input-avatime").val(transFormatDate(data.availableTime));
                        $("#input-outtime").val(transFormatDate(data.outTime));
                        $("#input-docknumber").val(data.dockNumber);
                        $("#input-verifiedby").val(data.verifiedBy);
                    }
                });

                grandChannel.openiframe(index, ".iframe-update", "800px", "350px");
            })

            //点击更新信息弹窗中的更新按钮，将数据更新到收货单中
            $("#btn-update").on("click", function () {
                var inboundDate = $("#input-inbounddate").val();
                var unloadFinishTime = $("#input-finishtime").val();
                var availableTime = $("#input-avatime").val();
                var outTime = $("#input-outtime").val();
                var dockNumber = $("#input-docknumber").val();
                var verifiedBy = $("#input-verifiedby").val();

                if (inboundDate != "") {
                    var obj = {
                        "inboundDate": inboundDate,
                        "unloadFinishTime": unloadFinishTime == "" ? "1900-01-01" : unloadFinishTime,
                        "availableTime": availableTime == "" ? "1900-01-01" : availableTime,
                        "outTime": outTime == "" ? "1900-01-01" : outTime,
                        "dockNumber": dockNumber,
                        "verifiedBy": verifiedBy
                    }

                    url = "/api/warehouseinboundlog/?masterOrderId=" + masterOrderId + "&operation=Update";

                    grandChannel.sendAjaxMethod("PUT", url, obj, index);
                }
                else {
                    alert("Inbound Date is required.");
                }
            });

            //点击提交卸货报告弹窗中的提交按钮，将收货单标记为完成收货并提交收货报告
            $("#btn-submitreport").on("click", function () {
                var inboundDate = $("#input-inbounddate").val();
                var unloadFinishTime = $("#input-finishtime").val();
                var availableTime = $("#input-avatime").val();
                var outTime = $("#input-outtime").val();
                var dockNumber = $("#input-docknumber").val();
                var verifiedBy = $("#input-verifiedby").val();

                if (inboundDate != "") {
                    var obj = {
                        "inboundDate": inboundDate,
                        "unloadFinishTime": unloadFinishTime == "" ? "1900-01-01" : unloadFinishTime,
                        "availableTime": availableTime == "" ? "1900-01-01" : availableTime,
                        "outTime": outTime == "" ? "1900-01-01" : outTime,
                        "dockNumber": dockNumber,
                        "verifiedBy": verifiedBy
                    }

                    url = "/api/warehouseinboundlog/?masterOrderId=" + masterOrderId + "&operation=Report";

                    grandChannel.sendAjaxMethod("PUT", url, obj, index);
                }
                else {
                    alert("Inbound Date is required.");
                }
            });

            //点击提交新comment按钮，打开一个简易填写界面
            $("#btn-detail-comment").on("click", function () {
                $("#input-detail-comment").val("");
                $("#btn-detail-update").hide();
                $("#btn-detail-add").show();
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });
            });

            //点击Add，建立一个新的仓库报告条目
            $("#btn-detail-add").on("click", function () {
                var description = $("#input-detail-comment").val();

                if (description != "") {
                    layer.close(index);
                    url = "/api/fba/fbamasterorder/?masterOrderId=" + masterOrderId + "&comment=" + encodeURIComponent(description) + "&operation=AddNewComment";
                    SendAjaxMethodAndRefreshWorkOrder("POST", url, {});
                }
            });

            //点击操作指示表中的Comment按钮，提出comment
            $(".table-wo").on("click", ".btn-comment", function () {
                chargingDetailId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId;
                var pIndex;
                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        pIndex = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(pIndex);
                        $("#input-detail-comment").val(data.comment);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
                $("#btn-detail-update").show();
                $("#btn-detail-add").hide();
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });
            });

            //点击更新按钮，更新操作指示的comment
            $("#btn-detail-update").on("click", function () {
                var description = $("#input-detail-comment").val();

                if (description != "") {
                    layer.close(index);
                    url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId + "&comment=" + encodeURIComponent(description) + "&isChargingItem=true&operation=UpdateComment";
                    SendAjaxMethodAndRefreshWorkOrder("PUT", url, {});
                }
            });

            //点击confirm按钮，将选中指令标记为处理完成
            $(".table-wo").on("click", ".btn-confirm", function () {
                var chargingItemDetailId = $(this).attr('iid');
                url = "/api/warehouseindex/?chargingItemDetailId=" + chargingItemDetailId + "&operation=Confirm";
                SendAjaxMethodAndRefreshWorkOrder("PUT", url, {});
            });

            //点击Register plt按钮，跳转到托盘注册页面
            $("#table").on("click", ".btn-registering", function () {
                masterOrderId = $(this).attr('iid');
                $(window.location).attr('href', "/fba/warehouseOperation/?masterOrderId=" + masterOrderId);
            });

            //点击提交托盘注册表，提交注册
            $("#table").on("click", ".btn-registered", function () {
                masterOrderId = $(this).attr('iid');
                url = "/api/FBAMasterOrder/?masterOrderId=" + masterOrderId + "&operation=Register"

                layer.confirm("Are you sure you have finished the registration </br> of pallet information？", { title: "Warnning", btn: ["Yes", "No"] },
                    function (index22) {
                        alert(123);
                        grandChannel.sendAjaxMethod("PUT", url, {}, index);
                        layer.close(index22);
                    },
                    function () { }
                );
            });

            //点击分配库位按钮，跳转到库位分配页面
            $("#table").on("click", ".btn-allocating", function () {
                masterOrderId = $(this).attr('iid');
                $(window.location).attr('href', "/fba/FBAAllocating/?masterOrderId=" + masterOrderId);
            });

            //点击提交分配按钮，提交分配结果
            $("#table").on("click", ".btn-allocated", function () {
                masterOrderId = $(this).attr('iid');
                url = "/api/FBAMasterOrder/?masterOrderId=" + masterOrderId + "&operation=Allocate"

                grandChannel.sendAjaxMethod("PUT", url, {}, index);
            });

            //点击查看库存按钮，查看库存
            $("#table").on("click", ".btn-inventory", function myfunction() {
                masterOrderId = $(this).attr('iid');
                $(window.location).attr('href', "/fba/Inventory/?masterOrderId=" + masterOrderId);
            });

            //点击outbound log按钮，跳转到outbound log管理界面
            $("#btn-outboundlog").on("click", function () {
                $(window.location).attr("href", "/Warehouse/Index");
            });

            function getAjaxTable(methodType, url, tableId, table, columsArray, index, searchBar) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        if (table) {
                            table.destroy();
                        }

                        table = $(tableId).DataTable({
                            data: data,
                            destroy: true,
                            scrollX: true,
                            order: [[0, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: columsArray
                        });

                        var tableSearch = $("#table_filter").children('label').children('input');

                        if (searchBar != undefined) {
                            tableSearch.val(searchBar);
                            table.search(searchBar).draw();
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function transDate(date) {
                if (date != null)
                    return date.substring(0, 4) == "1900" ? " " : date.substring(0, 10);
                else
                    return "";
            }

            function transFormatDate(date) {
                if (date != null)
                    return date.substring(0, 4) == "1900" ? " " : date;
                else
                    return "";
            }

            function GetWorkOrder(masterOrderId, operation) {
                url = "/api/fba/fbamasterorder/?masterOrderId=" + masterOrderId + "&operation=WO";

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $(".text-place").html(transDate(data.placeTime));
                        $(".text-finish").html(transDate(data.unloadFinishTime));
                        $(".text-eta").html(transDate(data.eta));
                        $(".text-inbound").html(transDate(data.inboundDate));
                        $(".text-out").html(transDate(data.outTime));
                        $(".text-damage").html(data.isDamaged);
                        $(".text-container").html(data.container);
                        $(".text-grandnumber").html(data.grandNumber);
                        $(".text-start").html(transDate(data.unloadStartTime));
                        $(".text-unloading").html(data.unloadingType);
                        $(".text-storage").html(data.storageType);
                        $(".text-palletizing").html(data.palletizing);
                        $(".text-logon").html(parseFloat(data.logonProgress).toFixed(2) + "%");
                        $(".text-verified").html(data.verifiedBy);
                        $(".text-register").html(parseFloat(data.registerProgress).toFixed(2) + "%");
                        $(".text-dock").html(data.dock);
                        $(".text-allocation").html(parseFloat(data.allocationProgress).toFixed(2) + "%");

                        var plColumnArray = [
                            {
                                data: "id",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "shipmentId",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "amzRefId",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "warehouseCode",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "grossWeight",
                                render: function (data) {
                                    if (data != 0)
                                        return "<text>" + data + "</text>";
                                    else
                                        return "";
                                }
                            },
                            {
                                data: "cbm",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "quantity",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            }
                        ];
                        $(".table-packinglist").DataTable({
                            data: data.packingList,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "asc"]],
                            scrollCollapse: true,
                            scrollY: "200px",
                            iDisplayLength: 100,
                            columns: plColumnArray
                        });

                        var osColumnArray = [
                            {
                                data: "id",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "description",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "comment",
                                render: function (data) {
                                    if (data == null)
                                        return "";
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "result",
                                render: function (data) {
                                    if (data == null)
                                        return "";
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "status",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "handlingStatus",
                                render: function (data) {
                                    if (data == "New")
                                        return "<font color='blue'>" + data + "</font>";
                                    else if (data == "Pending" || data == "Updated" || data == "Processing")
                                        return "<font color='red'>" + data + "</font>";
                                    else if (data == "Finished" || data == "Confirmed")
                                        return "<font color='green'>" + data + "</font>";
                                    else
                                        return "<font>" + data + "</font>"
                                }
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    if (operation == "view" || operation == "review" || operation == "preview")
                                        return "";
                                    else
                                        return "<button iid='" + data + "' class='btn btn-link btn-comment'>Comment</button><button iid='" + data + "' class='btn btn-link btn-confirm'>Confirm/Finish</button>";
                                }
                            }
                        ];
                        table = $(".table-wo").DataTable({
                            data: data.operationInstructions,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: osColumnArray
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            }

            function SendAjaxMethodAndRefreshWorkOrder(methodType, url, obj, operation) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: obj,
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function () {
                        layer.close(index);
                        GetWorkOrder(masterOrderId, operation);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };
        });
    </script>
}