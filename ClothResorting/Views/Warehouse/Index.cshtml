
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Warehouse Client</h1>
<h2>Outbound Order Management</h2>

<div class="maincontainer">
    <div style="margin:20px">
        @*<input type="button" class="btn btn-default btn-back" value="<< Back" />*@
        <input id="btn-inboundlog" type="button" class="btn btn-primary" value="View Inbound Log" />
    </div>
    <div style="margin:20px">
        <font size="5">Catagory: </font>
        <input name="all" type="button" class="btn btn-default btn-color" value="All" />
        <input name="new" style="background-color:orange;color:white" type="button" class="btn btn-default btn-color" value="New Order" />
        <input name="processing" style="background-color:red;color:white" type="button" class="btn btn-default btn-color" value="Processing Order" />
        <input name="ready" style="background-color:green;color:white" type="button" class="btn btn-default btn-color" value="Ready Order" />
        <input name="released" style="background-color:brown;color:white" type="button" class="btn btn-default btn-color" value="Released Order" />
    </div>
    <div>
        <table id="table" class="table table-condensed table-hover table-striped" style="table-layout:fixed;word-wrap:break-word;">
            <thead>
                <tr>
                    <th>ORDER ID</th>
                    <th style="width:70px">STATUS</th>
                    <th style="width:150px">STATUS CONTROL</th>
                    <th style="width:200px">OPERATION</th>
                    <th>DPT</th>
                    <th>TYPE</th>
                    <th>ORDER #</th>
                    <th>CTN</th>
                    <th>PLT</th>
                    <th>BOL #</th>
                    <th>PICK #</th>
                    <th>VENDOR</th>
                    <th style="width:80px">DEST</th>
                    <th>CARRIER</th>
                    <th style="width:80px">PUSH DATE</th>
                    <th style="width:80px">ETS</th>
                    <th style="width:80px">READY TIME</th>
                    <th style="width:80px">RELEASED DATE</th>
                    <th style="width:200px">INSTRUCTION</th>
                    <th style="width:200px">OPLOG</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="iframe-fbadate">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Select Operation Date: </text><input type="datetime-local" id='input-operationdate' style='width:200px' class='input-sm' /><br />
        <button id="btn-confirm" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Confirm Ready</button>
    </div>
</div>
<div class="iframe-detail">
    <div style="margin-top:20px;margin-right:20px;text-align:right">
        <text>Comment: </text><input id='input-detail-comment' style='width:400px' class='input-sm' /><br />
        <button id="btn-detail-add" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Add</button>
        <button id="btn-detail-update" class='btn btn-primary' style="margin-top:20px;margin-right:20px;text-align:right">Update</button>
    </div>
</div>
@Html.Partial("~/Views/shiporder/_FBAShipOrderPartial.cshtml", null)

@section scripts
{
    <script>
        $(document).ready(function () {
            var index;
            var table;
            var url;
            var status;
            var orderNumber;
            var shipOrderId;
            var orderId;
            var pageId;
            var searchBar = grandChannel.getUrlParameter('search');

            $(".iframe-wo, .iframe-wo-readonly, .iframe-wo-warehouse, .iframe-wo-result").hide();
            $(".iframe-fbadate, .iframe-detail").hide();

            var columnsArray = [
                {
                    data: "id",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "status",
                    render: function (data) {
                        status = data;
                        if (data == "New Created")
                            return "<font color='gray'>" + data + "</font>"
                        else if (data == "Picking")
                            return "<font color='vermilion'>" + data + "</font>";
                        if (data == "New Order")
                            return "<font color='orange'>" + data + "</font>"
                        else if (data == "Processing" || data == "Pending" || data == "Updated")
                            return "<font color='red'>" + data + "</font>";
                        else if (data == "Ready")
                            return "<font color='green'>" + data + "</font>";
                        else if (data == "Released")
                            return "<font color='brown'>" + data + "</font>";
                        else if (data == "Shipped")
                            return "<font color='blue'>" + data + "</font>";
                        else
                            return "<font>" + data + "</font>";
                    }
                },
                {
                    data: "id",
                    render: function (data) {
                        if (status == "New Order")
                            return "<input type='button' class='btn btn-link btn-fbadate' iid='" + data + "' value='Start' />";
                        else if (status == "Processing" || status == "Pending" || status == "Updated")
                            //return "<input type='button' class='btn btn-link btn-fbarevert' iid='" + data + "' value='Stop' /><input type='button' class='btn btn-link btn-fbadate' iid='" + data + "' value='Ready' /><input type='button' class='btn btn-link btn-wo-warehouse' iid='" + data + "' value='WO' />";
                            return "<input type='button' class='btn btn-link btn-fbarevert' iid='" + data + "' value='Stop' /><input type='button' class='btn btn-link btn-wo-warehouse' iid='" + data + "' value='WO' />";
                        else if (status == "Ready")
                            return "<input type='button' class='btn btn-link btn-fbadate' iid='" + data + "' value='Release' />";
                        else if (status == "Released")
                            return "";
                        else if (status == "Shipped")
                            return "";
                        else
                            return "";
                    }
                },
                {
                    data: "id",
                    render: function (data) {
                        if (status == "New Order")
                            return "<input type='button' class='btn btn-link btn-fbaview' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' />";
                        else if (status == "Processing" || status == "Pending" || status == "Updated")
                            return "<input type='button' class='btn btn-link btn-fbaadjust' iid='" + data + "' value='Adjust' />";
                        else if (status == "Ready")
                            return "<input type='button' class='btn btn-link btn-fbaview' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' />";
                        else if (status == "Released")
                            return "<input type='button' class='btn btn-link btn-fbaview' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' />";
                        else if (status == "Shipped")
                            return "<input type='button' class='btn btn-link btn-fbaview' iid='" + data + "' value='View' /><input type='button' class='btn btn-link btn-wo-readonly' iid='" + data + "' value='WO' />";
                        else
                            return "";
                    }
                },
                {
                    data: "department",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "warehouseOrderType",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "orderNumber",
                    render: function (data) {
                        orderNumber = data;
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "totalCtns",
                    render: function (data) {
                        return "<font color='green'>" + data + "</font>";
                    }
                },
                {
                    data: "totalPlts",
                    render: function (data) {
                        return "<font color='blue'>" + data + "</font>";
                    }
                },
                {
                    data: "bolNumber",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "pickNumber",
                    render: function (data) {
                        if (data == null)
                            return "";
                        else
                            return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "customerCode",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "destination",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "carrier",
                    render: function (data) {
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "placeTime",
                    render: function (data) {
                        return "<text>" + data.substring(0, 10) + "</text>";
                    }
                },
                {
                    data: "ets",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "readyTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>"
                        else
                            return "<text>" + data.toString().substring(0, 10) + " " + data.toString().substring(11, 16) + "</text>";
                    }
                },
                {
                    data: "releaseTime",
                    render: function (data) {
                        if (data == "1900-01-01T00:00:00")
                            return "<font color='red'></font>"
                        else
                            return "<text>" + data.toString().substring(0, 10) + " " + data.toString().substring(11, 16) + "</text>";
                    }
                },
                {
                    data: "instruction",
                    render: function (data) {
                        if (data == null)
                            return "";
                        return "<text>" + data + "</text>";
                    }
                },
                {
                    data: "operationLog",
                    render: function (data) {
                        if (data == null)
                            return "";
                        else
                            return "<text>" + data + "</text>";
                    }
                }
            ]
            url = "/api/WarehouseIndex/?operation=GET";
            getAjaxTable("GET", url, "#table", table, columnsArray, index, searchBar);

            //点击按状态查看按钮，按状态分类型
            $(".btn-color").on("click", function () {

                if ($(this).attr('name') == "new")
                {
                    url = "/api/WarehouseIndex/?operation=New Order";
                }
                else if ($(this).attr('name') == "processing") {
                    url = "/api/WarehouseIndex/?operation=Processing";
                }
                else if ($(this).attr('name') == "ready") {
                    url = "/api/WarehouseIndex/?operation=Ready";
                }
                else if ($(this).attr('name') == "released") {
                    url = "/api/WarehouseIndex/?operation=Released";
                }
                else
                {
                    url = "/api/WarehouseIndex/?operation=GET";
                }

                getAjaxTable("GET", url, "#table", table, columnsArray, index, searchBar);
            });

            //点击inbound log按钮，跳转到inbound log管理界面
            $("#btn-inboundlog").on("click", function () {
                $(window.location).attr("href", "/Warehouse/InboundLog/");
            });

            //点击FBA订单下的view按钮，查看FBA的运单（只读状态）
            $("#table").on("click", ".btn-fbaview", function () {
                shipOrderId = $(this).parent().parent("tr").children('td').eq(0).children('text').html();
                $(window.location).attr('href', "/shiporder/viewfbapickdetail/?shipOrderId=" + shipOrderId);
            });

            //点击操作栏中的WO按钮，以只读的形式查看WO
            $("#table").on("click", ".btn-wo-readonly", function () {
                customerCode = $(this).parent().parent("tr").children("td").eq(5).children("text").html();
                shipOrderId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                reference = $(this).parent().parent("tr").children("td").eq(7).children("text").html();
                $(".h2-customercode").html("Customer Code: " + customerCode);
                pageId = ".iframe-wo-readonly";
                grandChannel.openiframe(index, pageId, "1000px", "800px");
                GetWorkOrder(shipOrderId, pageId);
            });

            //点击状态控制栏中的WO按钮，以编辑页面的形式打开WO
            $("#table").on("click", ".btn-wo-warehouse", function () {
                customerCode = $(this).parent().parent("tr").children("td").eq(5).children("text").html();
                shipOrderId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                reference = $(this).parent().parent("tr").children("td").eq(7).children("text").html();
                $(".h2-customercode").html("Customer Code: " + customerCode);
                pageId = ".iframe-wo-warehouse";
                grandChannel.openiframe(index, pageId, "1000px", "800px");
                GetWorkOrder(shipOrderId, pageId);
            });

            //点击FBA订单下的Adjust按钮，打开可以调整的FBA运单（只限调整）
            $("#table").on("click", ".btn-fbaadjust", function () {
                shipOrderId = $(this).parent().parent("tr").children('td').eq(0).children('text').html();
                $(window.location).attr('href', "/shiporder/FBAPickDetailAdjustOnly/?shipOrderId=" + shipOrderId)
            });

            //点击FBA订单下的正向状态转换按钮，打开填写日期弹窗
            $("#table").on("click", ".btn-fbadate", function () {
                var button = $(this);
                shipOrderId = button.attr('iid');

                grandChannel.openiframe(index, ".iframe-fbadate", "400px", "150px");
            });

            //填好日期后，点击确认按钮
            $("#btn-confirm").on("click", function () {
                layer.close(index);
                var operationDate = $("#input-operationdate").val();

                if (operationDate != "")
                {
                    url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&operationDate=" + operationDate + "&operation=ChangeStatus";
                    grandChannel.sendAjaxMethod("PUT", url, {}, index);
                }
                else {
                    alert("Ship Date cannot be empty.");
                }
            });

            //点击Stop等逆转按钮，逆转状态
            $("#table").on("click", ".btn-fbarevert", function () {
                var id = $(this).attr('iid');
                var date = new Date();
                var today = date.getFullYear().toString() + "-" + (date.getMonth() + 1).toString() + "-" + date.getDate().toString();

                url = "/api/fba/fbashiporder/?shipOrderId=" + id + "&operationDate=" + today + "&operation=ReverseStatus";
                grandChannel.sendAjaxMethod("PUT", url, {}, index);
            })

            //点击start等正向状态转换按钮，改变状态
            $("#table").on("click", ".btn-fbachangestatus", function () {
                var id = $(this).attr('iid');
                var date = new Date();
                var today = date.getFullYear().toString() + "-" + (date.getMonth() + 1).toString() + "-" + date.getDate().toString();

                url = "/api/fba/fbashiporder/?shipOrderId=" + id + "&operationDate=" + today + "&operation=ChangeStatus";
                grandChannel.sendAjaxMethod("PUT", url, {}, index);
            })

            //点击操作指示表中的Comment按钮，提出comment
            $(".table-wo").on("click", ".btn-comment", function () {
                chargingDetailId = $(this).parent().parent("tr").children("td").eq(0).children("text").html();
                url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId;
                var pIndex;
                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        pIndex = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(pIndex);
                        $("#input-detail-comment").val(data.comment);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
                $("#btn-detail-update").show();
                $("#btn-detail-add").hide();
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });
            });

            //点击更新按钮，更新操作指示
            $("#btn-detail-update").on("click", function () {
                var description = $("#input-detail-comment").val();

                if (description != "") {
                    layer.close(index);
                    url = "/api/fba/fbashiporder/?chargingDetailId=" + chargingDetailId + "&comment=" + encodeURIComponent(description) + "&isChargingItem=true&operation=UpdateComment";
                    SendAjaxMethodAndRefreshWorkOrder("PUT", url, {});
                }
            });

            //点击保存按钮，保存三项更新
            $(".btn-save").on("click", function () {
                var pickMan = $("#input-pickman").val();
                var instructor = $("#input-instructor").val();
                var location = $("#input-lot").val();

                if (pickMan != "" && instructor != "" && location != "")
                {
                    var operation;

                    if ($(this).val() == "Save&Close")
                        operation = encodeURIComponent("Save&Close");
                    else
                        operation = encodeURIComponent("Save&Ready")

                    url = "/api/warehouseIndex/?shipOrderId=" + shipOrderId + "&pickMan=" + pickMan + "&instructor=" + instructor + "&location=" + location + "&operation=" + operation;
                    grandChannel.sendAjaxMethod("PUT", url, {});
                }
                else
                {
                    alert("Pick Man, Instructor and Location are required.");
                }
            });

            //点击提交新comment按钮，打开一个简易填写界面
            $("#btn-detail-comment").on("click", function () {
                $("#input-detail-comment").val("");
                $("#btn-detail-update").hide();
                $("#btn-detail-add").show();
                index = layer.open({
                    title: false,
                    type: 1,
                    shadeclose: true,
                    area: ["500px", "150px"],
                    content: $(".iframe-detail")
                });
            });

            //点击Add，建立一个新的仓库报告条目
            $("#btn-detail-add").on("click", function () {
                var description = $("#input-detail-comment").val();

                if (description != "") {
                    layer.close(index);
                    url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&comment=" + encodeURIComponent(description) + "&operation=AddNewComment";
                    SendAjaxMethodAndRefreshWorkOrder("POST", url, {});
                }
            });

            //点击confirm按钮，将选中指令标记为处理完成
            $(".table-wo").on("click", ".btn-confirm", function () {
                var chargingItemDetailId = $(this).attr('iid');
                url = "/api/warehouseindex/?chargingItemDetailId=" + chargingItemDetailId + "&operation=Confirm";
                SendAjaxMethodAndRefreshWorkOrder("PUT", url, {});
            });

            //点击PL中的库位，让对象暂时变成绿色
            $(".table-pickinglist").on("click", ".font-location", function () {
                if ($(this).attr('color') == "red")
                    $(this).attr('color', "green");
                else
                    $(this).attr('color', "red");
            });

            function getAjaxTable(methodType, url, tableId, table, columsArray, index, searchBar) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 1,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        if (table) {
                            table.destroy();
                        }

                        table = $(tableId).DataTable({
                            data: data,
                            destroy: true,
                            scrollX: true,
                            order: [[14, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: columsArray
                        });

                        var tableSearch = $("#table_filter").children('label').children('input');

                        if (searchBar != undefined) {
                            tableSearch.val(searchBar);
                            table.search(searchBar).draw();
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            function GetWorkOrder(shipOrderId, pageId) {
                url = "/api/fba/fbashiporder/?shipOrderId=" + shipOrderId + "&operation=WO";

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        layer.close(index);
                        $(".text-place").html(data.placeTime);
                        $(".text-ready").html(data.readyTime);
                        $(".text-ets").html(data.ets);
                        $(".text-pm").html(data.pickMan);
                        $(".text-instructor").html(data.instructor);
                        $(".text-so").html(data.shipOrderNumber);
                        $(".text-reference").html(data.reference);
                        $(".text-destination").html(data.destination);
                        $(".text-carrier").html(data.carrier);
                        $(".text-lot").html(data.lot);
                        $(".text-ctns").html(data.pickableCtns);
                        $(".text-plts").html(data.pickablePlts);
                        $(".text-inventory").html(data.pltsFromInventory);
                        $(".text-new").html(data.newPlts);
                        $(".text-total").html(data.outboundPlts);

                        var plColumnArray = [
                            {
                                data: "order",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "container",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "sku",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "pickableCtns",
                                render: function (data) {
                                    return "<text>" + data + "</text>";
                                }
                            },
                            {
                                data: "pickablePlts",
                                render: function (data) {
                                    if (data != 0)
                                        return "<text>" + data + "</text>";
                                    else
                                        return "";
                                }
                            },
                            {
                                data: "location",
                                render: function (data) {
                                    return "<font class='font-location' color='red'>" + data + "</font>";
                                }
                            }
                        ];
                        $(".table-pickinglist").DataTable({
                            data: data.pickingLists,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "asc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: plColumnArray
                        });
                        var osColumnArray;
                        if (pageId == ".iframe-wo-readonly") {
                            osColumnArray = [
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "description",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "comment",
                                    render: function (data) {
                                        if (data == null)
                                            return "";
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "result",
                                    render: function (data) {
                                        if (data == null)
                                            return "";
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "status",
                                    render: function (data) {
                                        return "";
                                    }
                                },
                                {
                                    data: "handlingStatus",
                                    render: function (data) {
                                        if (data == "New")
                                            return "<font color='blue'>" + data + "</font>";
                                        else if (data == "Pending")
                                            return "<font color='red'>" + data + "</font>";
                                        else if (data == "Updated" || data == "Retrued")
                                            return "<font color='Orange'>" + data + "</font>";
                                        else if (data == "Finished" || data == "Confirmed")
                                            return "<font color='green'>" + data + "</font>";
                                        else
                                            return "<font>Invaild Date</font>"
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        return " ";
                                    }
                                }
                            ];
                        }
                        else if (pageId == ".iframe-wo-warehouse") {

                            $("#input-pickman").val(data.pickMan);
                            $("#input-instructor").val(data.instructor);
                            $("#input-lot").val(data.lot);

                            osColumnArray = [
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "description",
                                    render: function (data) {
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "comment",
                                    render: function (data) {
                                        if (data == null)
                                            return "";
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "result",
                                    render: function (data) {
                                        if (data == null)
                                            return "";
                                        return "<text>" + data + "</text>";
                                    }
                                },
                                {
                                    data: "status",
                                    render: function (data) {
                                        return "";
                                    }
                                },
                                {
                                    data: "handlingStatus",
                                    render: function (data) {
                                        if (data == "New")
                                            return "<font color='blue'>" + data + "</font>";
                                        else if (data == "Pending")
                                            return "<font color='red'>" + data + "</font>";
                                        else if (data == "Updated" || data == "Retrued")
                                            return "<font color='Orange'>" + data + "</font>";
                                        else if (data == "Confirmed" || data == "Finished")
                                            return "<font color='green'>" + data + "</font>";
                                        else
                                            return "<font>Invaild Date</font>"
                                    }
                                },
                                {
                                    data: "id",
                                    render: function (data) {
                                        return "<button iid='" + data + "' class='btn btn-link btn-comment'>Comment</button><button iid='" + data + "' class='btn btn-link btn-confirm'>Confirm/Finish</button>";
                                    }
                                }
                            ];
                        }

                        table = $(".table-wo").DataTable({
                            data: data.operationInstructions,
                            destroy: true,
                            //scrollX: true,
                            order: [[0, "desc"]],
                            scrollCollapse: true,
                            scrollY: "600px",
                            iDisplayLength: 100,
                            columns: osColumnArray
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            }

            function SendAjaxMethodAndRefreshWorkOrder(methodType, url, obj) {
                $.ajax({
                    type: methodType,
                    url: url,
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    data: obj,
                    beforeSend: function () {
                        layer.close(index);
                        index = layer.msg('Processing...', {
                            icon: 3,
                            shade: 0.01,
                            time: 99 * 1000
                        });
                    },
                    success: function (data) {
                        GetWorkOrder(shipOrderId, pageId)
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.alert(XMLHttpRequest.responseJSON.exceptionMessage, function () {
                            window.location.reload();
                        });
                    }
                });
            };

            $(".btn-back").on("click", function () {
                window.history.back(-1);
            });
        });
    </script>
}
